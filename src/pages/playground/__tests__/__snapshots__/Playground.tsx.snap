// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Playground tests Playground renders correctly 1`] = `
"<RouterProvider router={{...}}>
  <Router basename=\\"/\\" location={{...}} navigationType=\\"POP\\" navigator={{...}}>
    <DataRoutes routes={{...}} state={{...}}>
      <RenderErrorBoundary location={{...}} revalidation=\\"idle\\" component={{...}} error={[undefined]} routeContext={{...}}>
        <RenderedRoute match={{...}} routeContext={{...}}>
          <Provider store={{...}}>
            <Playground>
              <HotKeysEnabled className=\\"Playground bp4-dark\\" keyMap={{...}} handlers={{...}}>
                <HotKeysWrapper hotKeys={{...}} className=\\"Playground bp4-dark\\">
                  <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" onKeyDown={[Function: bound _handleKeyDown]} onKeyPress={[Function: bound _handleKeyPress]} onKeyUp={[Function: bound _handleKeyUp]} className=\\"Playground bp4-dark\\">
                    <Workspace controlBarProps={{...}} editorContainerProps={{...}} handleSideContentHeightChange={[Function (anonymous)]} replProps={{...}} sideBarProps={{...}} sideContentHeight={[undefined]} sideContentProps={{...}} sideContentIsResizeable={true}>
                      <div className=\\"workspace\\">
                        <Prompt when={false} message=\\"You have changes that may not be saved. Are you sure you want to leave?\\" />
                        <ControlBar editorButtons={{...}}>
                          <div className=\\"ControlBar\\">
                            <div className=\\"ControlBar_editor bp4-button-group\\">
                              <ControlBarAutorunButtons isEntrypointFileDefined={true} isDebugging={false} isEditorAutorun={false} isRunning={false} autorunDisabled={false} sourceChapter={4} pauseDisabled={false} handleEditorEval={[Function: handleEditorEval]} handleInterruptEval={[Function: handleInterruptEval]} handleToggleEditorAutorun={[Function: handleToggleEditorAutorun]} handleDebuggerPause={[Function: handleDebuggerPause]} handleDebuggerReset={[Function: handleDebuggerReset]} handleDebuggerResume={[Function: handleDebuggerResume]}>
                                <div className=\\"Switch\\">
                                  <Blueprint4.Switch label=\\"\\" checked={false} onChange={[Function: handleToggleEditorAutorun]}>
                                    <Control label=\\"\\" checked={false} onChange={[Function: handleToggleEditorAutorun]} type=\\"checkbox\\" typeClassName=\\"bp4-switch\\" indicatorChildren={{...}}>
                                      <label className=\\"bp4-control bp4-switch\\" style={[undefined]}>
                                        <input checked={false} onChange={[Function: handleToggleEditorAutorun]} type=\\"checkbox\\" />
                                        <span className=\\"bp4-control-indicator\\" />
                                      </label>
                                    </Control>
                                  </Blueprint4.Switch>
                                </div>
                                <ControlBarRunButton handleEditorEval={[Function: handleEditorEval]} isEntrypointFileDefined={true} color={[undefined]} className={[undefined]}>
                                  <Blueprint4.Tooltip2 content=\\"...or press shift-enter in the editor\\" placement=\\"top\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                    <Tooltip2Provider>
                                      <Blueprint4.Popover2 modifiers={{...}} content=\\"...or press shift-enter in the editor\\" placement=\\"top\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                        <Manager>
                                          <Reference>
                                            <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                              <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                <ControlButton label=\\"Run\\" icon=\\"play\\" onClick={[Function: handleEditorEval]} options={{...}} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                  <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className={[undefined]} type={[undefined]} onClick={[Function: handleEditorEval]} icon={{...}} rightIcon={false}>
                                                    <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: handleEditorEval]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                      <Blueprint4.Icon icon={{...}}>
                                                        <Blueprint4.Icon icon=\\"play\\" color={[undefined]}>
                                                          <span aria-hidden={true} icon=\\"play\\" className=\\"bp4-icon bp4-icon-play\\" title={[undefined]}>
                                                            <svg fill={[undefined]} data-icon=\\"play\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                              <path d=\\"M12 8c0-.35-.19-.64-.46-.82l.01-.02-6-4-.01.02A.969.969 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 6-4-.01-.02c.27-.18.46-.47.46-.82z\\" fillRule=\\"evenodd\\" />
                                                            </svg>
                                                          </span>
                                                        </Blueprint4.Icon>
                                                      </Blueprint4.Icon>
                                                      <span className=\\"bp4-button-text\\">
                                                        Run
                                                      </span>
                                                      <Blueprint4.Icon icon={false} />
                                                    </button>
                                                  </Blueprint4.Button>
                                                </ControlButton>
                                              </span>
                                            </Blueprint4.ResizeSensor2>
                                          </Reference>
                                          <Popper innerRef={[Function (anonymous)]} placement=\\"top\\" strategy=\\"absolute\\" modifiers={{...}}>
                                            <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                          </Popper>
                                        </Manager>
                                      </Blueprint4.Popover2>
                                    </Tooltip2Provider>
                                  </Blueprint4.Tooltip2>
                                </ControlBarRunButton>
                              </ControlBarAutorunButtons>
                              <ControlBarShareButton handleGenerateLz={[Function: handleGenerateLz]} handleShortenURL={[Function: handleShortenURL]} handleUpdateShortURL={[Function: handleUpdateShortURL]} queryString={[undefined]} shortURL={[undefined]} isSicp={[undefined]}>
                                <Blueprint4.Popover2 popoverClassName=\\"Popover-share\\" inheritDarkTheme={false} content={{...}} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} interactionKind=\\"click\\" matchTargetWidth={false} minimal={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true}>
                                  <Manager>
                                    <Reference>
                                      <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                        <span aria-haspopup=\\"true\\" className=\\"bp4-popover2-target\\" onClick={[Function (anonymous)]} onKeyDown={[Function: onKeyDown]}>
                                          <Blueprint4.Tooltip2 content=\\"Get shareable link\\" placement=\\"top\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                            <Tooltip2Provider>
                                              <Blueprint4.Popover2 modifiers={{...}} content=\\"Get shareable link\\" placement=\\"top\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} className=\\"\\" tabIndex={[undefined]} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                <Manager>
                                                  <Reference>
                                                    <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                      <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                        <ControlButton label=\\"Share\\" icon=\\"share\\" onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                          <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[Function: onClick]} icon={{...}} rightIcon={false}>
                                                            <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: onClick]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                              <Blueprint4.Icon icon={{...}}>
                                                                <Blueprint4.Icon icon=\\"share\\" color={[undefined]}>
                                                                  <span aria-hidden={true} icon=\\"share\\" className=\\"bp4-icon bp4-icon-share\\" title={[undefined]}>
                                                                    <svg fill={[undefined]} data-icon=\\"share\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                      <path d=\\"M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z\\" fillRule=\\"evenodd\\" />
                                                                    </svg>
                                                                  </span>
                                                                </Blueprint4.Icon>
                                                              </Blueprint4.Icon>
                                                              <span className=\\"bp4-button-text\\">
                                                                Share
                                                              </span>
                                                              <Blueprint4.Icon icon={false} />
                                                            </button>
                                                          </Blueprint4.Button>
                                                        </ControlButton>
                                                      </span>
                                                    </Blueprint4.ResizeSensor2>
                                                  </Reference>
                                                  <Popper innerRef={[Function (anonymous)]} placement=\\"top\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                    <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                  </Popper>
                                                </Manager>
                                              </Blueprint4.Popover2>
                                            </Tooltip2Provider>
                                          </Blueprint4.Tooltip2>
                                        </span>
                                      </Blueprint4.ResizeSensor2>
                                    </Reference>
                                    <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                      <Blueprint4.Overlay autoFocus={true} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                    </Popper>
                                  </Manager>
                                </Blueprint4.Popover2>
                              </ControlBarShareButton>
                              <ControlBarChapterSelect handleChapterSelect={[Function (anonymous)]} isFolderModeEnabled={false} sourceChapter={4} sourceVariant=\\"default\\" disabled={false}>
                                <Blueprint4.Select items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function (anonymous)]} itemListRenderer={[Function: chapterListRenderer]} filterable={false} disabled={false}>
                                  <Blueprint4.QueryList items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function (anonymous)]} itemListRenderer={[Function: chapterListRenderer]} disabled={false} renderer={[Function (anonymous)]} resetOnQuery={true}>
                                    <Blueprint4.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp4-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                                      <Manager>
                                        <span className=\\"bp4-popover-wrapper\\">
                                          <Reference innerRef={[Function (anonymous)]}>
                                            <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function (anonymous)]}>
                                              <Blueprint4.ResizeSensor onResize={[Function (anonymous)]}>
                                                <span onClick={[Function (anonymous)]} aria-haspopup=\\"true\\" className=\\"bp4-popover-target\\">
                                                  <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                                    <Blueprint4.Button className=\\"bp4-minimal\\" text=\\"Source §4\\" rightIcon=\\"double-caret-vertical\\" disabled={false}>
                                                      <button type=\\"button\\" className=\\"bp4-button bp4-minimal\\" disabled={false} onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                        <Blueprint4.Icon icon={[undefined]} />
                                                        <span className=\\"bp4-button-text\\">
                                                          Source §4
                                                        </span>
                                                        <Blueprint4.Icon icon=\\"double-caret-vertical\\">
                                                          <span aria-hidden={true} icon=\\"double-caret-vertical\\" className=\\"bp4-icon bp4-icon-double-caret-vertical\\" title={[undefined]}>
                                                            <svg fill={[undefined]} data-icon=\\"double-caret-vertical\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                              <path d=\\"M5 7h6a1.003 1.003 0 00.71-1.71l-3-3C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-3 3A1.003 1.003 0 005 7zm6 2H5a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 9z\\" fillRule=\\"evenodd\\" />
                                                            </svg>
                                                          </span>
                                                        </Blueprint4.Icon>
                                                      </button>
                                                    </Blueprint4.Button>
                                                  </div>
                                                </span>
                                              </Blueprint4.ResizeSensor>
                                            </InnerReference>
                                          </Reference>
                                          <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp4-popover\\" usePortal={true} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                        </span>
                                      </Manager>
                                    </Blueprint4.Popover>
                                  </Blueprint4.QueryList>
                                </Blueprint4.Select>
                              </ControlBarChapterSelect>
                              <ControlBarSessionButtons isFolderModeEnabled={false} editorSessionId=\\"\\" getEditorValue={[Function (anonymous)]} handleSetEditorSessionId={[Function: handleSetEditorSessionId]} sharedbConnected={false}>
                                <Blueprint4.Tooltip2 content={[undefined]} disabled={true} compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content={[undefined]} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={true} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                        <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                          <Blueprint4.Popover2 content={{...}} disabled={false} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" matchTargetWidth={false} minimal={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} className=\\"\\" tabIndex={0}>
                                            <Manager>
                                              <Reference>
                                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                  <span aria-haspopup=\\"true\\" className=\\"bp4-popover2-target\\" onClick={[Function (anonymous)]} onKeyDown={[Function: onKeyDown]}>
                                                    <ControlButton label=\\"Session\\" icon=\\"social-media\\" options={{...}} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                                      <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[undefined]} icon={{...}} rightIcon={false}>
                                                        <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[undefined]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                          <Blueprint4.Icon icon={{...}}>
                                                            <Blueprint4.Icon icon=\\"social-media\\" color={[undefined]}>
                                                              <span aria-hidden={true} icon=\\"social-media\\" className=\\"bp4-icon bp4-icon-social-media\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"social-media\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M9.5 4c.4 0 .8-.1 1.1-.3C12 4.5 12.9 6 13 7.6c0 .5.5.9 1 .9.6 0 1-.4 1-1v-.2c-.2-2.4-1.5-4.4-3.5-5.5-.1-1-.9-1.8-2-1.8s-2 .9-2 2 .9 2 2 2zM4 8.5c0-.7-.4-1.3-.9-1.7.3-1.4 1.2-2.6 2.5-3.3.3-.1.6-.4.6-.9s-.4-1-1-1c-.2 0-.3 0-.5.1-1.9 1-3.2 2.8-3.6 5C.4 7.1 0 7.8 0 8.5c0 1.1.9 2 2 2s2-.9 2-2zm8.8 1.2c-1.1 0-2 .9-2 2v.3c-.8.6-1.8.9-2.8.9-1.2 0-2.3-.4-3.2-1.1-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.6.3.8C4.6 14.4 6.2 15 8 15c1.5 0 3-.5 4.1-1.3.2.1.5.1.7.1 1.1 0 2-.9 2-2s-.9-2.1-2-2.1z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                          </Blueprint4.Icon>
                                                          <span className=\\"bp4-button-text\\">
                                                            Session
                                                          </span>
                                                          <Blueprint4.Icon icon={false} />
                                                        </button>
                                                      </Blueprint4.Button>
                                                    </ControlButton>
                                                  </span>
                                                </Blueprint4.ResizeSensor2>
                                              </Reference>
                                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                <Blueprint4.Overlay autoFocus={true} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                              </Popper>
                                            </Manager>
                                          </Blueprint4.Popover2>
                                        </span>
                                      </Blueprint4.ResizeSensor2>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarSessionButtons>
                              <ControlBarToggleFolderModeButton isFolderModeEnabled={false} isSessionActive={false} isPersistenceActive={false} toggleFolderMode={[Function: toggleFolderMode]}>
                                <Blueprint4.Tooltip2 content=\\"Enable Folder mode\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content=\\"Enable Folder mode\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Manager>
                                        <Reference>
                                          <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                            <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                              <ControlButton label=\\"Folder\\" icon=\\"folder-close\\" options={{...}} onClick={[Function: toggleFolderMode]} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[Function: toggleFolderMode]} icon={{...}} rightIcon={false}>
                                                  <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: toggleFolderMode]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                    <Blueprint4.Icon icon={{...}}>
                                                      <Blueprint4.Icon icon=\\"folder-close\\" color={[undefined]}>
                                                        <span aria-hidden={true} icon=\\"folder-close\\" className=\\"bp4-icon bp4-icon-folder-close\\" title={[undefined]}>
                                                          <svg fill={[undefined]} data-icon=\\"folder-close\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                            <path d=\\"M-.01 14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7h-16v7zm15-10H7.41L5.7 2.3a.965.965 0 00-.71-.3h-4c-.55 0-1 .45-1 1v3h16V5c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                                                          </svg>
                                                        </span>
                                                      </Blueprint4.Icon>
                                                    </Blueprint4.Icon>
                                                    <span className=\\"bp4-button-text\\">
                                                      Folder
                                                    </span>
                                                    <Blueprint4.Icon icon={false} />
                                                  </button>
                                                </Blueprint4.Button>
                                              </ControlButton>
                                            </span>
                                          </Blueprint4.ResizeSensor2>
                                        </Reference>
                                        <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                          <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                        </Popper>
                                      </Manager>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarToggleFolderModeButton>
                              <ControlBarGoogleDriveButtons isFolderModeEnabled={false} currentFile={[undefined]} loggedInAs={[undefined]} isDirty={[undefined]} onClickSaveAs={[Function: onClickSaveAs]} onClickOpen={[Function: onClickOpen]} onClickSave={[undefined]} onClickLogOut={[Function: onClickLogOut]} onPopoverOpening={[Function: onPopoverOpening]}>
                                <Blueprint4.Tooltip2 content={[undefined]} disabled={true} compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content={[undefined]} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={true} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                        <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                          <Blueprint4.Popover2 autoFocus={false} content={{...}} onOpening={[Function: onPopoverOpening]} popoverClassName=\\"bp4-popover-dismiss\\" disabled={false} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" matchTargetWidth={false} minimal={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} className=\\"\\" tabIndex={0}>
                                            <Manager>
                                              <Reference>
                                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                  <span aria-haspopup=\\"true\\" className=\\"bp4-popover2-target\\" onClick={[Function (anonymous)]} onKeyDown={[Function: onKeyDown]}>
                                                    <ControlButton label=\\"Google Drive\\" icon=\\"cloud\\" options={{...}} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                                      <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[undefined]} icon={{...}} rightIcon={false}>
                                                        <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[undefined]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                          <Blueprint4.Icon icon={{...}}>
                                                            <Blueprint4.Icon icon=\\"cloud\\" color={[undefined]}>
                                                              <span aria-hidden={true} icon=\\"cloud\\" className=\\"bp4-icon bp4-icon-cloud\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"cloud\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M12 6c-.03 0-.07 0-.1.01A5 5 0 002 7c0 .11.01.22.02.33A3.51 3.51 0 000 10.5C0 12.43 1.57 14 3.5 14H12c2.21 0 4-1.79 4-4s-1.79-4-4-4z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                          </Blueprint4.Icon>
                                                          <span className=\\"bp4-button-text\\">
                                                            Google Drive
                                                          </span>
                                                          <Blueprint4.Icon icon={false} />
                                                        </button>
                                                      </Blueprint4.Button>
                                                    </ControlButton>
                                                  </span>
                                                </Blueprint4.ResizeSensor2>
                                              </Reference>
                                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[Function: onPopoverOpening]} transitionDuration={300} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                              </Popper>
                                            </Manager>
                                          </Blueprint4.Popover2>
                                        </span>
                                      </Blueprint4.ResizeSensor2>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarGoogleDriveButtons>
                              <ControlBarGitHubButtons isFolderModeEnabled={false} loggedInAs={[undefined]} githubSaveInfo={{...}} isDirty={true} onClickOpen={[Function: onClickOpen]} onClickSaveAs={[Function: onClickSaveAs]} onClickSave={[Function: onClickSave]} onClickLogIn={[Function: onClickLogIn]} onClickLogOut={[Function: onClickLogOut]}>
                                <Blueprint4.Tooltip2 content={[undefined]} disabled={true} compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content={[undefined]} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={true} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                        <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                          <Blueprint4.Popover2 autoFocus={false} content={{...}} popoverClassName=\\"bp4-popover-dismiss\\" disabled={false} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" matchTargetWidth={false} minimal={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} className=\\"\\" tabIndex={0}>
                                            <Manager>
                                              <Reference>
                                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                  <span aria-haspopup=\\"true\\" className=\\"bp4-popover2-target\\" onClick={[Function (anonymous)]} onKeyDown={[Function: onKeyDown]}>
                                                    <ControlButton label=\\"GitHub\\" icon=\\"git-branch\\" options={{...}} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                                      <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[undefined]} icon={{...}} rightIcon={false}>
                                                        <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[undefined]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                          <Blueprint4.Icon icon={{...}}>
                                                            <Blueprint4.Icon icon=\\"git-branch\\" color={[undefined]}>
                                                              <span aria-hidden={true} icon=\\"git-branch\\" className=\\"bp4-icon bp4-icon-git-branch\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"git-branch\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M12 1c-1.66 0-3 1.34-3 3 0 1.25.76 2.32 1.85 2.77A2.02 2.02 0 019 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.92 0 3.52-1.35 3.91-3.15A2.996 2.996 0 0012 1zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                          </Blueprint4.Icon>
                                                          <span className=\\"bp4-button-text\\">
                                                            GitHub
                                                          </span>
                                                          <Blueprint4.Icon icon={false} />
                                                        </button>
                                                      </Blueprint4.Button>
                                                    </ControlButton>
                                                  </span>
                                                </Blueprint4.ResizeSensor2>
                                              </Reference>
                                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                              </Popper>
                                            </Manager>
                                          </Blueprint4.Popover2>
                                        </span>
                                      </Blueprint4.ResizeSensor2>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarGitHubButtons>
                              <ControlBarExecutionTime execTime={1000} handleChangeExecTime={[Function: handleChangeExecTime]}>
                                <Blueprint4.Tooltip2 content=\\"Execution Time\\" placement=\\"top\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content=\\"Execution Time\\" placement=\\"top\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Manager>
                                        <Reference>
                                          <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                            <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                              <Blueprint4.NumericInput leftIcon=\\"time\\" style={{...}} min={1000} value={1000} onValueChange={[Function: handleChangeExecTime]} allowNumericCharactersOnly={true} buttonPosition=\\"right\\" clampValueOnBlur={false} defaultValue=\\"\\" large={false} majorStepSize={10} minorStepSize={0.1} selectAllOnFocus={false} selectAllOnIncrement={false} small={false} stepSize={1} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                <Blueprint4.ControlGroup className=\\"bp4-numeric-input\\" fill={[undefined]}>
                                                  <div className=\\"bp4-control-group bp4-numeric-input\\">
                                                    <Blueprint4.InputGroup asyncControl={[undefined]} autoComplete=\\"off\\" id=\\"numericInput-0\\" role=\\"spinbutton\\" style={{...}} min={1000} value=\\"1000\\" disabled={[undefined]} tabIndex={0} aria-valuemax={[undefined]} aria-valuemin={1000} aria-valuenow={1000} intent={[undefined]} inputClassName={[undefined]} inputRef={[Function (anonymous)]} large={false} leftElement={[undefined]} leftIcon=\\"time\\" onFocus={[Function (anonymous)]} onBlur={[Function (anonymous)]} onChange={[Function (anonymous)]} onCompositionEnd={[Function (anonymous)]} onCompositionUpdate={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyPress={[Function (anonymous)]} onPaste={[Function (anonymous)]} rightElement={[undefined]} small={false}>
                                                      <div className=\\"bp4-input-group\\">
                                                        <Blueprint4.Icon icon=\\"time\\" aria-hidden={true} tabIndex={-1}>
                                                          <span aria-hidden={true} icon=\\"time\\" tabIndex={-1} className=\\"bp4-icon bp4-icon-time\\" title={[undefined]}>
                                                            <svg fill={[undefined]} data-icon=\\"time\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                              <path d=\\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm1-6.41V4c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L9 7.59z\\" fillRule=\\"evenodd\\" />
                                                            </svg>
                                                          </span>
                                                        </Blueprint4.Icon>
                                                        <input type=\\"text\\" autoComplete=\\"off\\" id=\\"numericInput-0\\" role=\\"spinbutton\\" style={{...}} min={1000} value=\\"1000\\" disabled={[undefined]} tabIndex={0} aria-valuemax={[undefined]} aria-valuemin={1000} aria-valuenow={1000} onFocus={[Function (anonymous)]} onBlur={[Function (anonymous)]} onChange={[Function (anonymous)]} onCompositionEnd={[Function (anonymous)]} onCompositionUpdate={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyPress={[Function (anonymous)]} onPaste={[Function (anonymous)]} className=\\"bp4-input\\" />
                                                      </div>
                                                    </Blueprint4.InputGroup>
                                                    <Blueprint4.ButtonGroup className=\\"bp4-fixed\\" vertical={true}>
                                                      <div className=\\"bp4-button-group bp4-vertical bp4-fixed\\">
                                                        <Blueprint4.Button aria-label=\\"increment\\" aria-controls=\\"numericInput-0\\" disabled={false} icon=\\"chevron-up\\" intent={[undefined]} onKeyDown={[Function: onKeyDown]} onMouseDown={[Function: onMouseDown]}>
                                                          <button type=\\"button\\" aria-label=\\"increment\\" aria-controls=\\"numericInput-0\\" disabled={false} onKeyDown={[Function (anonymous)]} onMouseDown={[Function: onMouseDown]} className=\\"bp4-button\\" onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                            <Blueprint4.Icon icon=\\"chevron-up\\">
                                                              <span aria-hidden={true} icon=\\"chevron-up\\" className=\\"bp4-icon bp4-icon-chevron-up\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"chevron-up\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M12.71 9.29l-4-4C8.53 5.11 8.28 5 8 5s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 7.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                            <Blueprint4.Icon icon={[undefined]} />
                                                          </button>
                                                        </Blueprint4.Button>
                                                        <Blueprint4.Button aria-label=\\"decrement\\" aria-controls=\\"numericInput-0\\" disabled={true} icon=\\"chevron-down\\" intent={[undefined]} onKeyDown={[Function: onKeyDown]} onMouseDown={[Function: onMouseDown]}>
                                                          <button type=\\"button\\" aria-label=\\"decrement\\" aria-controls=\\"numericInput-0\\" disabled={true} onKeyDown={[Function (anonymous)]} onMouseDown={[Function: onMouseDown]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                            <Blueprint4.Icon icon=\\"chevron-down\\">
                                                              <span aria-hidden={true} icon=\\"chevron-down\\" className=\\"bp4-icon bp4-icon-chevron-down\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"chevron-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                            <Blueprint4.Icon icon={[undefined]} />
                                                          </button>
                                                        </Blueprint4.Button>
                                                      </div>
                                                    </Blueprint4.ButtonGroup>
                                                  </div>
                                                </Blueprint4.ControlGroup>
                                              </Blueprint4.NumericInput>
                                            </span>
                                          </Blueprint4.ResizeSensor2>
                                        </Reference>
                                        <Popper innerRef={[Function (anonymous)]} placement=\\"top\\" strategy=\\"absolute\\" modifiers={{...}}>
                                          <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                        </Popper>
                                      </Manager>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarExecutionTime>
                            </div>
                            <div className=\\"ControlBar_editingWorkspace bp4-button-group\\" />
                          </div>
                        </ControlBar>
                        <div className=\\"workspace-parent\\">
                          <Resizable enable={{...}} minWidth=\\"auto\\" maxWidth=\\"50%\\" onResize={[Function: toggleSideBarDividerDisplay]} onResizeStop={[Function: onResizeStop]} size={{...}} defaultSize={{...}} as=\\"div\\" onResizeStart={[Function: onResizeStart]} style={{...}} grid={{...}} lockAspectRatio={false} lockAspectRatioExtraWidth={0} lockAspectRatioExtraHeight={0} scale={1} resizeRatio={1} snapGap={0}>
                            <div style={{...}} className={[undefined]}>
                              <SideBar tabs={{...}} isExpanded={true} expandSideBar={[Function: expandSideBar]} collapseSideBar={[Function: collapseSideBar]}>
                                <div className=\\"sidebar-container\\" />
                              </SideBar>
                              <div className={[undefined]} style={[undefined]} />
                            </div>
                          </Resizable>
                          <div className=\\"row content-parent\\">
                            <div className=\\"editor-divider\\" />
                            <Resizable className=\\"resize-editor left-parent\\" enable={{...}} minWidth={0} onResize={[Function: toggleEditorDividerDisplay]} defaultSize={{...}} as=\\"div\\" onResizeStart={[Function: onResizeStart]} onResizeStop={[Function: onResizeStop]} style={{...}} grid={{...}} lockAspectRatio={false} lockAspectRatioExtraWidth={0} lockAspectRatioExtraHeight={0} scale={1} resizeRatio={1} snapGap={0}>
                              <div style={{...}} className=\\"resize-editor left-parent\\">
                                <EditorContainer editorSessionId=\\"\\" isEditorAutorun={false} editorVariant=\\"normal\\" baseFilePath=\\"/playground\\" isFolderModeEnabled={false} activeEditorTabIndex={0} setActiveEditorTabIndex={[Function (anonymous)]} removeEditorTabByIndex={[Function (anonymous)]} editorTabs={{...}} handleDeclarationNavigate={[Function (anonymous)]} handleEditorEval={[Function: handleEditorEval]} handlePromptAutocomplete={[Function (anonymous)]} handleSendReplInputToOutput={[Function (anonymous)]} handleSetSharedbConnected={[Function (anonymous)]} onChange={[Function (anonymous)]} onCursorChange={[Function (anonymous)]} onSelectionChange={[Function (anonymous)]} onLoad={[undefined]} sourceChapter={4} externalLibraryName=\\"NONE\\" sourceVariant=\\"default\\" handleEditorValueChange={[Function (anonymous)]} handleEditorUpdateBreakpoints={[Function (anonymous)]}>
                                  <div className=\\"editor-container\\">
                                    <Editor editorSessionId=\\"\\" isEditorAutorun={false} editorVariant=\\"normal\\" handleDeclarationNavigate={[Function (anonymous)]} handleEditorEval={[Function: handleEditorEval]} handlePromptAutocomplete={[Function (anonymous)]} handleSendReplInputToOutput={[Function (anonymous)]} handleSetSharedbConnected={[Function (anonymous)]} onChange={[Function (anonymous)]} onCursorChange={[Function (anonymous)]} onSelectionChange={[Function (anonymous)]} onLoad={[undefined]} sourceChapter={4} externalLibraryName=\\"NONE\\" sourceVariant=\\"default\\" handleEditorValueChange={[Function (anonymous)]} handleEditorUpdateBreakpoints={[Function (anonymous)]} editorTabIndex={0} editorValue=\\"// Type your program in here!\\" filePath=\\"/playground/program.js\\" highlightedLines={{...}} breakpoints={{...}}>
                                      <Memo() editorSessionId=\\"\\" isEditorAutorun={false} editorVariant=\\"normal\\" handleDeclarationNavigate={[Function (anonymous)]} handleEditorEval={[Function: handleEditorEval]} handlePromptAutocomplete={[Function (anonymous)]} handleSendReplInputToOutput={[Function (anonymous)]} handleSetSharedbConnected={[Function (anonymous)]} onChange={[Function (anonymous)]} onCursorChange={[Function (anonymous)]} onSelectionChange={[Function (anonymous)]} onLoad={[undefined]} sourceChapter={4} externalLibraryName=\\"NONE\\" sourceVariant=\\"default\\" handleEditorValueChange={[Function (anonymous)]} handleEditorUpdateBreakpoints={[Function (anonymous)]} editorTabIndex={0} editorValue=\\"// Type your program in here!\\" filePath=\\"/playground/program.js\\" highlightedLines={{...}} breakpoints={{...}} session={{...}} editorBinding=\\"\\" hooks={{...}}>
                                        <HotKeysEnabled className=\\"Editor bp4-card bp4-elevation-0\\" handlers={{...}}>
                                          <HotKeysWrapper hotKeys={{...}} className=\\"Editor bp4-card bp4-elevation-0\\">
                                            <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" className=\\"Editor bp4-card bp4-elevation-0\\">
                                              <div className=\\"row editor-react-ace\\">
                                                <ReactAce className=\\"react-ace\\" editorProps={{...}} markers={{...}} fontSize={17} height=\\"100%\\" highlightActiveLine={false} mode=\\"source4defaultNONE\\" theme=\\"source\\" value=\\"// Type your program in here!\\" width=\\"100%\\" setOptions={{...}} keyboardHandler=\\"\\" onChange={[Function (anonymous)]} onCursorChange={[Function (anonymous)]} commands={{...}} onSelectionChange={[Function (anonymous)]} name=\\"ace-editor\\" focus={false} enableSnippets={false} showGutter={true} onPaste={{...}} onLoad={{...}} onScroll={{...}} minLines={{...}} maxLines={{...}} readOnly={false} showPrintMargin={true} tabSize={4} cursorStart={1} style={{...}} scrollMargin={{...}} wrapEnabled={false} enableBasicAutocompletion={false} enableLiveAutocompletion={false} placeholder={{...}} navigateToFileEnd={true}>
                                                  <div id=\\"ace-editor\\" style={{...}} />
                                                </ReactAce>
                                              </div>
                                            </div>
                                          </HotKeysWrapper>
                                        </HotKeysEnabled>
                                      </Memo()>
                                    </Editor>
                                  </div>
                                </EditorContainer>
                                <div className={[undefined]} style={[undefined]}>
                                  <Resizer direction=\\"right\\" onResizeStart={[Function: bound ]} replaceStyles={[undefined]} className={[undefined]}>
                                    <div className=\\"\\" style={{...}} onMouseDown={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} />
                                  </Resizer>
                                </div>
                              </div>
                            </Resizable>
                            <div className=\\"right-parent\\">
                              <Resizable bounds=\\"parent\\" className=\\"resize-side-content\\" enable={{...}} onResize={[Function: toggleDividerDisplay]} onResizeStop={[Function: onResizeStop]} as=\\"div\\" onResizeStart={[Function: onResizeStart]} style={{...}} grid={{...}} lockAspectRatio={false} lockAspectRatioExtraWidth={0} lockAspectRatioExtraHeight={0} scale={1} resizeRatio={1} snapGap={0}>
                                <div style={{...}} className=\\"resize-side-content\\">
                                  <SideContent selectedTabId=\\"introduction\\" onChange={[Function (anonymous)]} tabs={{...}} workspaceLocation=\\"playground\\" sideContentHeight={[undefined]}>
                                    <GenericSideContent onChange={[Function (anonymous)]} tabs={{...}} workspaceLocation=\\"playground\\" renderFunction={[Function: renderFunction]}>
                                      <div className=\\"side-content\\">
                                        <Blueprint4.Card elevation={0} interactive={false}>
                                          <div className=\\"bp4-card bp4-elevation-0\\">
                                            <div className=\\"side-content-tabs\\">
                                              <Blueprint4.Tabs id=\\"side-content-tabs\\" onChange={[Function (anonymous)]} renderActiveTabPanelOnly={false} selectedTabId=\\"introduction\\" animate={true} fill={false} large={false} vertical={false}>
                                                <div className=\\"bp4-tabs\\">
                                                  <div className=\\"bp4-tab-list\\" onKeyDown={[Function (anonymous)]} onKeyPress={[Function (anonymous)]} role=\\"tablist\\">
                                                    <div className=\\"bp4-tab-indicator-wrapper\\" style={{...}}>
                                                      <div className=\\"bp4-tab-indicator\\" />
                                                    </div>
                                                    <Blueprint4.TabTitle id=\\"introduction\\" title={{...}} disabled={false} className=\\"side-content-tab\\" panel={{...}} parentId=\\"side-content-tabs\\" onClick={[Function (anonymous)]} selected={true}>
                                                      <div onClick={[Function (anonymous)]} aria-controls=\\"bp4-tab-panel_side-content-tabs_introduction\\" aria-disabled={false} aria-expanded={true} aria-selected={true} className=\\"bp4-tab side-content-tab\\" data-tab-id=\\"introduction\\" id=\\"bp4-tab-title_side-content-tabs_introduction\\" role=\\"tab\\" tabIndex={0}>
                                                        <Blueprint4.Tooltip2 content=\\"Introduction\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                          <Tooltip2Provider>
                                                            <Blueprint4.Popover2 modifiers={{...}} content=\\"Introduction\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                              <Manager>
                                                                <Reference>
                                                                  <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                                    <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                                      <div className=\\"side-content-tooltip\\" id=\\"introduction-icon\\" disabled={[undefined]} tabIndex={0}>
                                                                        <Blueprint4.Icon icon=\\"home\\" iconSize={20}>
                                                                          <span aria-hidden={true} icon=\\"home\\" className=\\"bp4-icon bp4-icon-home\\" title={[undefined]}>
                                                                            <svg fill={[undefined]} data-icon=\\"home\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                              <path d=\\"M2 12v7c0 .55.45 1 1 1h5v-7h4v7h5c.55 0 1-.45 1-1v-7l-8-8-8 8zm17.71-2.71L17 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v1.59L10.71.3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-9 9a1.003 1.003 0 001.42 1.42L10 2.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z\\" fillRule=\\"evenodd\\" />
                                                                            </svg>
                                                                          </span>
                                                                        </Blueprint4.Icon>
                                                                      </div>
                                                                    </span>
                                                                  </Blueprint4.ResizeSensor2>
                                                                </Reference>
                                                                <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                                  <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                                </Popper>
                                                              </Manager>
                                                            </Blueprint4.Popover2>
                                                          </Tooltip2Provider>
                                                        </Blueprint4.Tooltip2>
                                                      </div>
                                                    </Blueprint4.TabTitle>
                                                    <Blueprint4.TabTitle id=\\"data_visualizer\\" title={{...}} disabled={false} className=\\"side-content-tab\\" panel={{...}} parentId=\\"side-content-tabs\\" onClick={[Function (anonymous)]} selected={false}>
                                                      <div onClick={[Function (anonymous)]} aria-controls=\\"bp4-tab-panel_side-content-tabs_data_visualizer\\" aria-disabled={false} aria-expanded={false} aria-selected={false} className=\\"bp4-tab side-content-tab\\" data-tab-id=\\"data_visualizer\\" id=\\"bp4-tab-title_side-content-tabs_data_visualizer\\" role=\\"tab\\" tabIndex={-1}>
                                                        <Blueprint4.Tooltip2 content=\\"Data Visualizer\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                          <Tooltip2Provider>
                                                            <Blueprint4.Popover2 modifiers={{...}} content=\\"Data Visualizer\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                              <Manager>
                                                                <Reference>
                                                                  <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                                    <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                                      <div className=\\"side-content-tooltip\\" id=\\"data_visualizer-icon\\" disabled={[undefined]} tabIndex={0}>
                                                                        <Blueprint4.Icon icon=\\"eye-open\\" iconSize={20}>
                                                                          <span aria-hidden={true} icon=\\"eye-open\\" className=\\"bp4-icon bp4-icon-eye-open\\" title={[undefined]}>
                                                                            <svg fill={[undefined]} data-icon=\\"eye-open\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                              <path d=\\"M10.01 7.984A2.008 2.008 0 008.012 9.99c0 1.103.9 2.006 1.998 2.006a2.008 2.008 0 001.998-2.006c0-1.103-.9-2.006-1.998-2.006zM20 9.96v-.03-.01-.02-.02a.827.827 0 00-.21-.442c-.64-.802-1.398-1.514-2.168-2.166-1.658-1.404-3.566-2.587-5.664-3.058a8.982 8.982 0 00-3.656-.05c-1.11.2-2.178.641-3.177 1.183-1.569.852-2.997 2.016-4.246 3.33-.23.25-.46.49-.67.761-.279.351-.279.773 0 1.124.64.802 1.4 1.514 2.169 2.166 1.658 1.404 3.566 2.577 5.664 3.058 1.209.271 2.438.281 3.656.05 1.11-.21 2.178-.651 3.177-1.193 1.569-.852 2.997-2.016 4.246-3.33.23-.24.46-.49.67-.751.11-.12.179-.271.209-.442v-.02-.02-.01-.03V10v-.04zM10.01 14A4.003 4.003 0 016.014 9.99a4.003 4.003 0 013.996-4.011 4.003 4.003 0 013.996 4.011 4.003 4.003 0 01-3.996 4.011z\\" fillRule=\\"evenodd\\" />
                                                                            </svg>
                                                                          </span>
                                                                        </Blueprint4.Icon>
                                                                      </div>
                                                                    </span>
                                                                  </Blueprint4.ResizeSensor2>
                                                                </Reference>
                                                                <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                                  <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                                </Popper>
                                                              </Manager>
                                                            </Blueprint4.Popover2>
                                                          </Tooltip2Provider>
                                                        </Blueprint4.Tooltip2>
                                                      </div>
                                                    </Blueprint4.TabTitle>
                                                    <Blueprint4.TabTitle id=\\"env_visualizer\\" title={{...}} disabled={false} className=\\"side-content-tab\\" panel={{...}} parentId=\\"side-content-tabs\\" onClick={[Function (anonymous)]} selected={false}>
                                                      <div onClick={[Function (anonymous)]} aria-controls=\\"bp4-tab-panel_side-content-tabs_env_visualizer\\" aria-disabled={false} aria-expanded={false} aria-selected={false} className=\\"bp4-tab side-content-tab\\" data-tab-id=\\"env_visualizer\\" id=\\"bp4-tab-title_side-content-tabs_env_visualizer\\" role=\\"tab\\" tabIndex={-1}>
                                                        <Blueprint4.Tooltip2 content=\\"Env Visualizer\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                          <Tooltip2Provider>
                                                            <Blueprint4.Popover2 modifiers={{...}} content=\\"Env Visualizer\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                              <Manager>
                                                                <Reference>
                                                                  <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                                    <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                                      <div className=\\"side-content-tooltip\\" id=\\"env_visualizer-icon\\" disabled={[undefined]} tabIndex={0}>
                                                                        <Blueprint4.Icon icon=\\"globe\\" iconSize={20}>
                                                                          <span aria-hidden={true} icon=\\"globe\\" className=\\"bp4-icon bp4-icon-globe\\" title={[undefined]}>
                                                                            <svg fill={[undefined]} data-icon=\\"globe\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                              <path d=\\"M7.53 4.37c.1-.1.1-.26 0-.35l-.68-.68c-.1-.1-.25-.1-.35 0-.1.1-.1.26 0 .35l.68.68c.1.1.25.1.35 0zm3.17.06h.3c.09 0 .16-.01.16-.1 0-.09-.07-.1-.16-.1h-.3c-.09 0-.16.01-.16.1s.07.1.16.1zm.98 1.15c.09 0 .19-.08.19-.17v-.42c0-.09-.1-.17-.19-.17s-.19.08-.19.17v.42c0 .09.1.17.19.17zm-6.5 4.19c-.35 0-.56.28-.56.63v2.37c0 .35.21.62.56.62h.39v2.4c0 .34.33.61.67.61s.67-.27.67-.61v-1.44h-.02c.35 0 .6-.19.6-.54v-.41h.18c.35 0 .58-.28.58-.62v-.81c0-.01.01-.01 0-.02L6.1 9.77h-.92zM10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8 0-.74.11-1.46.3-2.14h.03v.65c0 .28.25.5.53.5.05 0 .1-.01.15-.02l1.05 1.05c.1.11.28.11.38 0 .1-.1.11-.27 0-.38L3.42 8.59c0-.03.05-.05.05-.08v-.16c0-.22.12-.3.34-.49h.63c.12 0 .23-.01.32-.07.01-.01.02 0 .03-.01.02-.02.04-.03.06-.04.01-.01.02-.01.03-.02l.02-.02 2.15-2.15c.24-.24.24-.63 0-.86-.23-.24-.62-.19-.86.04l-.41.46H5v-.64c0-.01.07.07.07-.12h.87c.17 0 .3-.12.3-.29 0-.17-.13-.29-.3-.29H4.88C6.27 2.7 8.05 2 10 2s3.73.7 5.12 1.86h-1.58l-.01-.04c-.06 0-.12 0-.17.04l-.71.7c-.09.09-.09.23 0 .31.09.09.23.09.32 0l.56-.6.01-.03h.34c0 .19-.1.13-.1.16v.1c0 .29-.2.5-.49.5h-.51c-.25 0-.52.28-.52.54v.23h-.12c-.16 0-.27.08-.27.24v.33h-.32c-.23 0-.41.15-.41.38 0 .22.18.35.41.35.1 0 .19.04.26-.16l.06.01.66-.59h.23l.53.5c.04.04.11.03.16-.01.04-.04.04-.16 0-.2L13 6.15h.32l.12.16c.25.25.65.23.89-.02l.12-.14H15c.02 0 .11.07.11.07v.33s-.06-.01-.07-.01h-.49c-.16 0-.28.13-.28.29 0 .16.13.29.28.29h.49c.01 0 .07-.01.07-.01v.2c-.19.28-.33.57-.62.57h-1.28s0-.01-.01-.01l-.58-.58a.622.622 0 00-.89 0l-.58.58s0 .01-.01.01h-.34c-.35 0-.67.28-.67.63v1.25c0 .35.32.61.67.61h1.22c.46.19.78.48.97.94v2.28c0 .35.23.6.58.6h.98c.35 0 .54-.25.54-.6v-2.2l1.21-1.17.04-.02.02-.01h.04c.1-.11.2-.26.2-.42V8.49c0-.25-.22-.44-.42-.63h.58c.02.38.29.57.63.57h.43c.13.51.18 1.03.18 1.57 0 4.42-3.58 8-8 8zm6.16-5.65c-.14 0-.29.11-.29.25v.77c0 .14.15.25.29.25.14 0 .29-.11.29-.25v-.77c0-.14-.15-.25-.29-.25zM10.5 3.48c0-.34-.28-.57-.62-.57h-.74c-.34 0-.57.25-.57.59 0 .05-.13.06.06.1v.64c0 .2.09.36.29.36.2 0 .29-.16.29-.36v-.19h.68c.33 0 .61-.23.61-.57z\\" fillRule=\\"evenodd\\" />
                                                                            </svg>
                                                                          </span>
                                                                        </Blueprint4.Icon>
                                                                      </div>
                                                                    </span>
                                                                  </Blueprint4.ResizeSensor2>
                                                                </Reference>
                                                                <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                                  <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                                </Popper>
                                                              </Manager>
                                                            </Blueprint4.Popover2>
                                                          </Tooltip2Provider>
                                                        </Blueprint4.Tooltip2>
                                                      </div>
                                                    </Blueprint4.TabTitle>
                                                    <Blueprint4.TabTitle id=\\"remote_execution\\" title={{...}} disabled={false} className=\\"side-content-tab\\" panel={{...}} parentId=\\"side-content-tabs\\" onClick={[Function (anonymous)]} selected={false}>
                                                      <div onClick={[Function (anonymous)]} aria-controls=\\"bp4-tab-panel_side-content-tabs_remote_execution\\" aria-disabled={false} aria-expanded={false} aria-selected={false} className=\\"bp4-tab side-content-tab\\" data-tab-id=\\"remote_execution\\" id=\\"bp4-tab-title_side-content-tabs_remote_execution\\" role=\\"tab\\" tabIndex={-1}>
                                                        <Blueprint4.Tooltip2 content=\\"Remote Execution\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                          <Tooltip2Provider>
                                                            <Blueprint4.Popover2 modifiers={{...}} content=\\"Remote Execution\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                              <Manager>
                                                                <Reference>
                                                                  <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                                    <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                                      <div className=\\"side-content-tooltip\\" id=\\"remote_execution-icon\\" disabled={[undefined]} tabIndex={0}>
                                                                        <Blueprint4.Icon icon=\\"satellite\\" iconSize={20}>
                                                                          <span aria-hidden={true} icon=\\"satellite\\" className=\\"bp4-icon bp4-icon-satellite\\" title={[undefined]}>
                                                                            <svg fill={[undefined]} data-icon=\\"satellite\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                              <path d=\\"M9 18c.6 0 1 .4 1 1s-.4 1-1 1c-5 0-9-4-9-9 0-.6.4-1 1-1s1 .4 1 1c0 3.9 3.1 7 7 7zm0-4c.6 0 1 .4 1 1s-.4 1-1 1c-2.8 0-5-2.2-5-5 0-.6.4-1 1-1s1 .4 1 1c0 1.7 1.3 3 3 3zm5.7-3.7c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4l-1.4 1.4c-.4.4-1 .4-1.4 0l-3.6-3.6c-.4-.4-.4-1 0-1.4l1.4-1.4zM4.7.3c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4L8.3 6.7c-.4.4-1 .4-1.4 0L3.3 3.1c-.4-.4-.4-1 0-1.4L4.7.3zm11.1 1c.4-.4 1-.4 1.4 0l1.6 1.6c.4.4.4 1 0 1.4l-6.5 6.5c-.4.4-1 .4-1.4 0L9.3 9.2c-.4-.4-.4-1 0-1.4l6.5-6.5zM9 12c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1z\\" fillRule=\\"evenodd\\" />
                                                                            </svg>
                                                                          </span>
                                                                        </Blueprint4.Icon>
                                                                      </div>
                                                                    </span>
                                                                  </Blueprint4.ResizeSensor2>
                                                                </Reference>
                                                                <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                                  <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                                </Popper>
                                                              </Manager>
                                                            </Blueprint4.Popover2>
                                                          </Tooltip2Provider>
                                                        </Blueprint4.Tooltip2>
                                                      </div>
                                                    </Blueprint4.TabTitle>
                                                  </div>
                                                  <div aria-labelledby=\\"bp4-tab-title_side-content-tabs_introduction\\" aria-hidden={false} className=\\"bp4-tab-panel side-content-tab\\" id=\\"bp4-tab-panel_side-content-tabs_introduction\\" role=\\"tabpanel\\">
                                                    <div className=\\"side-content-text\\">
                                                      <Memo(Markdown) content=\\"\\\\nWelcome to the Source Academy playground!\\\\n\\\\nThe book [_Structure and Interpretation of Computer Programs, JavaScript Edition_](https://sourceacademy.org/sicpjs/)\\\\nuses JavaScript sublanguages that we call [_Source_](https://docs.sourceacademy.org/). You have chosen the sublanguage [_Source §4_](https://docs.sourceacademy.org/source_4/).\\\\n\\\\nIn the editor on the left, you can use the [_Ace keyboard shortcuts_](https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts) \\\\nand also the [_Source Academy keyboard shortcuts_](https://github.com/source-academy/frontend/wiki/Source-Academy-Keyboard-Shortcuts).\\\\n\\\\n\\" openLinksInNewWindow={true} workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]}>
                                                        <div className=\\"md bp4-running-text\\" dangerouslySetInnerHTML={{...}} />
                                                      </Memo(Markdown)>
                                                    </div>
                                                  </div>
                                                  <div aria-labelledby=\\"bp4-tab-title_side-content-tabs_data_visualizer\\" aria-hidden={true} className=\\"bp4-tab-panel side-content-tab\\" id=\\"bp4-tab-panel_side-content-tabs_data_visualizer\\" role=\\"tabpanel\\">
                                                    <div className=\\"side-content-text\\">
                                                      <SideContentDataVisualizer workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]}>
                                                        <GlobalHotKeys keyMap={{...}} handlers={{...}}>
                                                          <div className=\\"sa-data-visualizer bp4-dark\\">
                                                            <p id=\\"data-visualizer-default-text\\" className=\\"bp4-running-text\\">
                                                              The data visualizer helps you to visualize data structures.
                                                              <br />
                                                              <br />
                                                              It is activated by calling the function
                                                               
                                                              <code>
                                                                draw_data(x
                                                                <sub>
                                                                  1
                                                                </sub>
                                                                , x
                                                                <sub>
                                                                  2
                                                                </sub>
                                                                , ... x
                                                                <sub>
                                                                  n
                                                                </sub>
                                                                )
                                                              </code>
                                                              , where
                                                               
                                                              <code>
                                                                x
                                                                <sub>
                                                                  k
                                                                </sub>
                                                              </code>
                                                               
                                                              would be the
                                                               
                                                              <code>
                                                                k
                                                                <sup>
                                                                  th
                                                                </sup>
                                                              </code>
                                                               
                                                              data structure that you want to visualize and 
                                                              <code>
                                                                n
                                                              </code>
                                                               is the number of structures.
                                                              <br />
                                                              <br />
                                                              The data visualizer uses box-and-pointer diagrams, as introduced in
                                                               
                                                              <a href=\\"https://sourceacademy.org/sicpjs/2.2\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\">
                                                                <i>
                                                                  Structure and Interpretation of Computer Programs, JavaScript Edition, Chapter 2, Section 2
                                                                </i>
                                                              </a>
                                                              .
                                                            </p>
                                                          </div>
                                                        </GlobalHotKeys>
                                                      </SideContentDataVisualizer>
                                                    </div>
                                                  </div>
                                                  <div aria-labelledby=\\"bp4-tab-title_side-content-tabs_env_visualizer\\" aria-hidden={true} className=\\"bp4-tab-panel side-content-tab\\" id=\\"bp4-tab-panel_side-content-tabs_env_visualizer\\" role=\\"tabpanel\\">
                                                    <div className=\\"side-content-text\\">
                                                      <Connect(SideContentEnvVisualizer) workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]}>
                                                        <SideContentEnvVisualizer workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]} numOfStepsTotal={0} numOfSteps={-1} breakpointSteps={{...}} needEnvUpdate={true} handleEditorEval={[Function (anonymous)]} handleEnvStepUpdate={[Function (anonymous)]}>
                                                          <HotKeysEnabled keyMap={{...}} handlers={{...}}>
                                                            <HotKeysWrapper hotKeys={{...}}>
                                                              <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" onKeyDown={[Function: bound _handleKeyDown]} onKeyPress={[Function: bound _handleKeyPress]} onKeyUp={[Function: bound _handleKeyUp]}>
                                                                <div className=\\"bp4-dark\\">
                                                                  <div className=\\"sa-substituter\\" style={{...}}>
                                                                    <Blueprint4.Slider disabled={true} min={1} max={0} onChange={[Function (anonymous)]} onRelease={[Function (anonymous)]} value={1} showTrackFill={true} stepSize={1} vertical={false} initialValue={0} intent=\\"primary\\">
                                                                      <Blueprint4.MultiSlider disabled={true} min={1} max={0} showTrackFill={true} stepSize={1} vertical={false} defaultTrackIntent=\\"none\\">
                                                                        <div className=\\"bp4-slider bp4-disabled\\" onMouseDown={[Function (anonymous)]} onTouchStart={[Function (anonymous)]}>
                                                                          <div className=\\"bp4-slider-track\\">
                                                                            <div className=\\"bp4-slider-progress\\" style={{...}} />
                                                                            <div className=\\"bp4-slider-progress bp4-intent-primary\\" style={{...}} />
                                                                            <div className=\\"bp4-slider-progress\\" style={{...}} />
                                                                          </div>
                                                                          <div className=\\"bp4-slider-axis\\" />
                                                                          <Blueprint4.SliderHandle htmlProps={[undefined]} className=\\"\\" disabled={true} label=\\"1\\" max={0} min={1} onChange={[Function (anonymous)]} onRelease={[Function (anonymous)]} stepSize={1} tickSize={-0} tickSizeRatio={-1} value={1} vertical={false}>
                                                                            <span role=\\"slider\\" tabIndex={0} className=\\"bp4-slider-handle\\" onKeyDown={[undefined]} onKeyUp={[undefined]} onMouseDown={[undefined]} onTouchStart={[undefined]} style={{...}} aria-valuemin={1} aria-valuemax={0} aria-valuenow={1} aria-orientation=\\"horizontal\\">
                                                                              <span className=\\"bp4-slider-label\\">
                                                                                1
                                                                              </span>
                                                                            </span>
                                                                          </Blueprint4.SliderHandle>
                                                                        </div>
                                                                      </Blueprint4.MultiSlider>
                                                                    </Blueprint4.Slider>
                                                                    <div style={{...}}>
                                                                      <Blueprint4.ButtonGroup>
                                                                        <div className=\\"bp4-button-group\\">
                                                                          <Blueprint4.Button disabled={true} icon=\\"double-chevron-left\\" onClick={[Function (anonymous)]}>
                                                                            <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                                              <Blueprint4.Icon icon=\\"double-chevron-left\\">
                                                                                <span aria-hidden={true} icon=\\"double-chevron-left\\" className=\\"bp4-icon bp4-icon-double-chevron-left\\" title={[undefined]}>
                                                                                  <svg fill={[undefined]} data-icon=\\"double-chevron-left\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                                    <path d=\\"M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L9.41 8z\\" fillRule=\\"evenodd\\" />
                                                                                  </svg>
                                                                                </span>
                                                                              </Blueprint4.Icon>
                                                                              <Blueprint4.Icon icon={[undefined]} />
                                                                            </button>
                                                                          </Blueprint4.Button>
                                                                          <Blueprint4.Button disabled={true} icon=\\"chevron-left\\" onClick={[Function (anonymous)]}>
                                                                            <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                                              <Blueprint4.Icon icon=\\"chevron-left\\">
                                                                                <span aria-hidden={true} icon=\\"chevron-left\\" className=\\"bp4-icon bp4-icon-chevron-left\\" title={[undefined]}>
                                                                                  <svg fill={[undefined]} data-icon=\\"chevron-left\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                                    <path d=\\"M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 8z\\" fillRule=\\"evenodd\\" />
                                                                                  </svg>
                                                                                </span>
                                                                              </Blueprint4.Icon>
                                                                              <Blueprint4.Icon icon={[undefined]} />
                                                                            </button>
                                                                          </Blueprint4.Button>
                                                                          <Blueprint4.Button disabled={true} icon=\\"chevron-right\\" onClick={[Function (anonymous)]}>
                                                                            <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                                              <Blueprint4.Icon icon=\\"chevron-right\\">
                                                                                <span aria-hidden={true} icon=\\"chevron-right\\" className=\\"bp4-icon bp4-icon-chevron-right\\" title={[undefined]}>
                                                                                  <svg fill={[undefined]} data-icon=\\"chevron-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                                    <path d=\\"M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z\\" fillRule=\\"evenodd\\" />
                                                                                  </svg>
                                                                                </span>
                                                                              </Blueprint4.Icon>
                                                                              <Blueprint4.Icon icon={[undefined]} />
                                                                            </button>
                                                                          </Blueprint4.Button>
                                                                          <Blueprint4.Button disabled={true} icon=\\"double-chevron-right\\" onClick={[Function (anonymous)]}>
                                                                            <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                                              <Blueprint4.Icon icon=\\"double-chevron-right\\">
                                                                                <span aria-hidden={true} icon=\\"double-chevron-right\\" className=\\"bp4-icon bp4-icon-double-chevron-right\\" title={[undefined]}>
                                                                                  <svg fill={[undefined]} data-icon=\\"double-chevron-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                                    <path d=\\"M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 00-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z\\" fillRule=\\"evenodd\\" />
                                                                                  </svg>
                                                                                </span>
                                                                              </Blueprint4.Icon>
                                                                              <Blueprint4.Icon icon={[undefined]} />
                                                                            </button>
                                                                          </Blueprint4.Button>
                                                                        </div>
                                                                      </Blueprint4.ButtonGroup>
                                                                    </div>
                                                                  </div>
                                                                  <br />
                                                                  <div id=\\"env-visualizer-default-text\\" className=\\"bp4-running-text\\">
                                                                    The environment model visualizer generates environment model diagrams following a notation introduced in
                                                                     
                                                                    <a href=\\"https://sourceacademy.org/sicpjs/3.2\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\">
                                                                      <i>
                                                                        Structure and Interpretation of Computer Programs, JavaScript Edition, Chapter 3, Section 2
                                                                      </i>
                                                                    </a>
                                                                    .
                                                                    <br />
                                                                    <br />
                                                                     On this tab, the REPL will be hidden from view, so do check that your code has no errors before running the stepper. You may use this tool by running your program and then dragging the slider above to see the state of the environment at different stages in the evaluation of your program. Clicking on the fast-forward button (double chevron) will take you to the next breakpoint in your program.
                                                                    <br />
                                                                    <br />
                                                                    <Blueprint4.Divider>
                                                                      <div className=\\"bp4-divider\\" />
                                                                    </Blueprint4.Divider>
                                                                    Some useful keyboard shortcuts:
                                                                    <br />
                                                                    <br />
                                                                    a: Move to the first step
                                                                    <br />
                                                                    e: Move to the last step
                                                                    <br />
                                                                    f: Move to the next step
                                                                    <br />
                                                                    b: Move to the previous step
                                                                    <br />
                                                                    <br />
                                                                    Note that these shortcuts are only active when the browser focus is on this tab.
                                                                  </div>
                                                                </div>
                                                              </div>
                                                            </HotKeysWrapper>
                                                          </HotKeysEnabled>
                                                        </SideContentEnvVisualizer>
                                                      </Connect(SideContentEnvVisualizer)>
                                                    </div>
                                                  </div>
                                                  <div aria-labelledby=\\"bp4-tab-title_side-content-tabs_remote_execution\\" aria-hidden={true} className=\\"bp4-tab-panel side-content-tab\\" id=\\"bp4-tab-panel_side-content-tabs_remote_execution\\" role=\\"tabpanel\\">
                                                    <div className=\\"side-content-text\\">
                                                      <SideContentRemoteExecution workspace=\\"playground\\" secretParams={[undefined]} callbackFunction={[Function: bound dispatchAction]} workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]}>
                                                        <Blueprint4.Callout intent=\\"danger\\">
                                                          <div className=\\"bp4-callout bp4-intent-danger bp4-callout-icon\\">
                                                            <Blueprint4.Icon icon=\\"error\\" aria-hidden={true} tabIndex={-1}>
                                                              <span aria-hidden={true} icon=\\"error\\" tabIndex={-1} className=\\"bp4-icon bp4-icon-error\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"error\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13h-2v-2h2v2zm0-3h-2v-7h2v7z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                            Please 
                                                            <NavLink to=\\"/login\\">
                                                              <Link aria-current={[undefined]} className=\\"\\" style={[undefined]} to=\\"/login\\">
                                                                <a aria-current={[undefined]} className=\\"\\" style={[undefined]} href=\\"/login\\" onClick={[Function: handleClick]} target={[undefined]}>
                                                                  log in
                                                                </a>
                                                              </Link>
                                                            </NavLink>
                                                             to execute on a remote device.
                                                          </div>
                                                        </Blueprint4.Callout>
                                                      </SideContentRemoteExecution>
                                                    </div>
                                                  </div>
                                                </div>
                                              </Blueprint4.Tabs>
                                            </div>
                                          </div>
                                        </Blueprint4.Card>
                                      </div>
                                    </GenericSideContent>
                                  </SideContent>
                                  <div className=\\"side-content-divider\\" />
                                  <div className={[undefined]} style={[undefined]}>
                                    <Resizer direction=\\"bottom\\" onResizeStart={[Function: bound ]} replaceStyles={[undefined]} className={[undefined]}>
                                      <div className=\\"\\" style={{...}} onMouseDown={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} />
                                    </Resizer>
                                  </div>
                                </div>
                              </Resizable>
                              <Repl output={{...}} replValue=\\"\\" handleReplEval={[Function: handleReplEval]} usingSubst={false} handleBrowseHistoryDown={[Function (anonymous)]} handleBrowseHistoryUp={[Function (anonymous)]} handleReplValueChange={[Function (anonymous)]} sourceChapter={4} sourceVariant=\\"default\\" externalLibrary=\\"NONE\\" hidden={false} inputHidden={false} replButtons={{...}} disableScrolling={[undefined]}>
                                <div className=\\"Repl\\" style={{...}}>
                                  <div className=\\"repl-output-parent\\">
                                    <HotKeysEnabled className=\\"repl-input-parent row bp4-card bp4-elevation-0\\" handlers={{...}}>
                                      <HotKeysWrapper hotKeys={{...}} className=\\"repl-input-parent row bp4-card bp4-elevation-0\\">
                                        <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" className=\\"repl-input-parent row bp4-card bp4-elevation-0\\">
                                          <ReplInput output={{...}} replValue=\\"\\" handleReplEval={[Function: handleReplEval]} usingSubst={false} handleBrowseHistoryDown={[Function (anonymous)]} handleBrowseHistoryUp={[Function (anonymous)]} handleReplValueChange={[Function (anonymous)]} sourceChapter={4} sourceVariant=\\"default\\" externalLibrary=\\"NONE\\" hidden={false} inputHidden={false} replButtons={{...}} disableScrolling={[undefined]}>
                                            <ReactAce className=\\"repl-react-ace react-ace\\" mode=\\"source4defaultNONE\\" theme=\\"source\\" height=\\"1px\\" width=\\"100%\\" value=\\"\\" onChange={[Function (anonymous)]} commands={{...}} minLines={1} maxLines={20} fontSize={17} highlightActiveLine={false} showGutter={false} showPrintMargin={false} setOptions={{...}} name=\\"ace-editor\\" focus={false} enableSnippets={false} onPaste={{...}} onLoad={{...}} onScroll={{...}} readOnly={false} tabSize={4} cursorStart={1} editorProps={{...}} style={{...}} scrollMargin={{...}} wrapEnabled={false} enableBasicAutocompletion={false} enableLiveAutocompletion={false} placeholder={{...}} navigateToFileEnd={true}>
                                              <div id=\\"ace-editor\\" style={{...}} />
                                            </ReactAce>
                                            <div className=\\"bp4-button-group bp4-dark\\">
                                              <ControlBarEvalButton handleReplEval={[Function: handleReplEval]} isRunning={false}>
                                                <Blueprint4.Tooltip2 content=\\"...or press shift-enter in the REPL\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                  <Tooltip2Provider>
                                                    <Blueprint4.Popover2 modifiers={{...}} content=\\"...or press shift-enter in the REPL\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                      <Manager>
                                                        <Reference>
                                                          <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                            <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                              <ControlButton label=\\"Eval\\" icon=\\"code\\" onClick={[Function: handleReplEval]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                                <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[Function: handleReplEval]} icon={{...}} rightIcon={false}>
                                                                  <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: handleReplEval]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                                    <Blueprint4.Icon icon={{...}}>
                                                                      <Blueprint4.Icon icon=\\"code\\" color={[undefined]}>
                                                                        <span aria-hidden={true} icon=\\"code\\" className=\\"bp4-icon bp4-icon-code\\" title={[undefined]}>
                                                                          <svg fill={[undefined]} data-icon=\\"code\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                            <path d=\\"M15.71 7.29l-3-3a1.003 1.003 0 00-1.42 1.42L13.59 8l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM5 5a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L2.41 8 4.7 5.71c.19-.18.3-.43.3-.71zm4-3c-.48 0-.87.35-.96.81l-2 10c-.01.06-.04.12-.04.19 0 .55.45 1 1 1 .48 0 .87-.35.96-.81l2-10c.01-.06.04-.12.04-.19 0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                                                                          </svg>
                                                                        </span>
                                                                      </Blueprint4.Icon>
                                                                    </Blueprint4.Icon>
                                                                    <span className=\\"bp4-button-text\\">
                                                                      Eval
                                                                    </span>
                                                                    <Blueprint4.Icon icon={false} />
                                                                  </button>
                                                                </Blueprint4.Button>
                                                              </ControlButton>
                                                            </span>
                                                          </Blueprint4.ResizeSensor2>
                                                        </Reference>
                                                        <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                          <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                        </Popper>
                                                      </Manager>
                                                    </Blueprint4.Popover2>
                                                  </Tooltip2Provider>
                                                </Blueprint4.Tooltip2>
                                              </ControlBarEvalButton>
                                              <ControlBarClearButton handleReplOutputClear={[Function: handleReplOutputClear]}>
                                                <ControlButton label=\\"Clear\\" icon=\\"remove\\" onClick={[Function: handleReplOutputClear]}>
                                                  <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[Function: handleReplOutputClear]} icon={{...}} rightIcon={false}>
                                                    <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: handleReplOutputClear]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                      <Blueprint4.Icon icon={{...}}>
                                                        <Blueprint4.Icon icon=\\"remove\\" color={[undefined]}>
                                                          <span aria-hidden={true} icon=\\"remove\\" className=\\"bp4-icon bp4-icon-remove\\" title={[undefined]}>
                                                            <svg fill={[undefined]} data-icon=\\"remove\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                              <path d=\\"M10.99 6.99h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z\\" fillRule=\\"evenodd\\" />
                                                            </svg>
                                                          </span>
                                                        </Blueprint4.Icon>
                                                      </Blueprint4.Icon>
                                                      <span className=\\"bp4-button-text\\">
                                                        Clear
                                                      </span>
                                                      <Blueprint4.Icon icon={false} />
                                                    </button>
                                                  </Blueprint4.Button>
                                                </ControlButton>
                                              </ControlBarClearButton>
                                            </div>
                                            <MediaQuery minWidth={769} />
                                          </ReplInput>
                                        </div>
                                      </HotKeysWrapper>
                                    </HotKeysEnabled>
                                  </div>
                                </div>
                              </Repl>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Workspace>
                  </div>
                </HotKeysWrapper>
              </HotKeysEnabled>
            </Playground>
          </Provider>
        </RenderedRoute>
      </RenderErrorBoundary>
    </DataRoutes>
  </Router>
</RouterProvider>"
`;

exports[`Playground tests Playground with link renders correctly 1`] = `
"<RouterProvider router={{...}}>
  <Router basename=\\"/\\" location={{...}} navigationType=\\"POP\\" navigator={{...}}>
    <DataRoutes routes={{...}} state={{...}}>
      <RenderErrorBoundary location={{...}} revalidation=\\"idle\\" component={{...}} error={[undefined]} routeContext={{...}}>
        <RenderedRoute match={{...}} routeContext={{...}}>
          <Provider store={{...}}>
            <Playground>
              <HotKeysEnabled className=\\"Playground bp4-dark\\" keyMap={{...}} handlers={{...}}>
                <HotKeysWrapper hotKeys={{...}} className=\\"Playground bp4-dark\\">
                  <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" onKeyDown={[Function: bound _handleKeyDown]} onKeyPress={[Function: bound _handleKeyPress]} onKeyUp={[Function: bound _handleKeyUp]} className=\\"Playground bp4-dark\\">
                    <Workspace controlBarProps={{...}} editorContainerProps={{...}} handleSideContentHeightChange={[Function (anonymous)]} replProps={{...}} sideBarProps={{...}} sideContentHeight={[undefined]} sideContentProps={{...}} sideContentIsResizeable={true}>
                      <div className=\\"workspace\\">
                        <Prompt when={false} message=\\"You have changes that may not be saved. Are you sure you want to leave?\\" />
                        <ControlBar editorButtons={{...}}>
                          <div className=\\"ControlBar\\">
                            <div className=\\"ControlBar_editor bp4-button-group\\">
                              <ControlBarAutorunButtons isEntrypointFileDefined={true} isDebugging={false} isEditorAutorun={false} isRunning={false} autorunDisabled={false} sourceChapter={2} pauseDisabled={false} handleEditorEval={[Function: handleEditorEval]} handleInterruptEval={[Function: handleInterruptEval]} handleToggleEditorAutorun={[Function: handleToggleEditorAutorun]} handleDebuggerPause={[Function: handleDebuggerPause]} handleDebuggerReset={[Function: handleDebuggerReset]} handleDebuggerResume={[Function: handleDebuggerResume]}>
                                <div className=\\"Switch\\">
                                  <Blueprint4.Switch label=\\"\\" checked={false} onChange={[Function: handleToggleEditorAutorun]}>
                                    <Control label=\\"\\" checked={false} onChange={[Function: handleToggleEditorAutorun]} type=\\"checkbox\\" typeClassName=\\"bp4-switch\\" indicatorChildren={{...}}>
                                      <label className=\\"bp4-control bp4-switch\\" style={[undefined]}>
                                        <input checked={false} onChange={[Function: handleToggleEditorAutorun]} type=\\"checkbox\\" />
                                        <span className=\\"bp4-control-indicator\\" />
                                      </label>
                                    </Control>
                                  </Blueprint4.Switch>
                                </div>
                                <ControlBarRunButton handleEditorEval={[Function: handleEditorEval]} isEntrypointFileDefined={true} color={[undefined]} className={[undefined]}>
                                  <Blueprint4.Tooltip2 content=\\"...or press shift-enter in the editor\\" placement=\\"top\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                    <Tooltip2Provider>
                                      <Blueprint4.Popover2 modifiers={{...}} content=\\"...or press shift-enter in the editor\\" placement=\\"top\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                        <Manager>
                                          <Reference>
                                            <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                              <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                <ControlButton label=\\"Run\\" icon=\\"play\\" onClick={[Function: handleEditorEval]} options={{...}} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                  <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className={[undefined]} type={[undefined]} onClick={[Function: handleEditorEval]} icon={{...}} rightIcon={false}>
                                                    <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: handleEditorEval]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                      <Blueprint4.Icon icon={{...}}>
                                                        <Blueprint4.Icon icon=\\"play\\" color={[undefined]}>
                                                          <span aria-hidden={true} icon=\\"play\\" className=\\"bp4-icon bp4-icon-play\\" title={[undefined]}>
                                                            <svg fill={[undefined]} data-icon=\\"play\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                              <path d=\\"M12 8c0-.35-.19-.64-.46-.82l.01-.02-6-4-.01.02A.969.969 0 005 3c-.55 0-1 .45-1 1v8c0 .55.45 1 1 1 .21 0 .39-.08.54-.18l.01.02 6-4-.01-.02c.27-.18.46-.47.46-.82z\\" fillRule=\\"evenodd\\" />
                                                            </svg>
                                                          </span>
                                                        </Blueprint4.Icon>
                                                      </Blueprint4.Icon>
                                                      <span className=\\"bp4-button-text\\">
                                                        Run
                                                      </span>
                                                      <Blueprint4.Icon icon={false} />
                                                    </button>
                                                  </Blueprint4.Button>
                                                </ControlButton>
                                              </span>
                                            </Blueprint4.ResizeSensor2>
                                          </Reference>
                                          <Popper innerRef={[Function (anonymous)]} placement=\\"top\\" strategy=\\"absolute\\" modifiers={{...}}>
                                            <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                          </Popper>
                                        </Manager>
                                      </Blueprint4.Popover2>
                                    </Tooltip2Provider>
                                  </Blueprint4.Tooltip2>
                                </ControlBarRunButton>
                              </ControlBarAutorunButtons>
                              <ControlBarShareButton handleGenerateLz={[Function: handleGenerateLz]} handleShortenURL={[Function: handleShortenURL]} handleUpdateShortURL={[Function: handleUpdateShortURL]} queryString={[undefined]} shortURL={[undefined]} isSicp={[undefined]}>
                                <Blueprint4.Popover2 popoverClassName=\\"Popover-share\\" inheritDarkTheme={false} content={{...}} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} disabled={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} interactionKind=\\"click\\" matchTargetWidth={false} minimal={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true}>
                                  <Manager>
                                    <Reference>
                                      <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                        <span aria-haspopup=\\"true\\" className=\\"bp4-popover2-target\\" onClick={[Function (anonymous)]} onKeyDown={[Function: onKeyDown]}>
                                          <Blueprint4.Tooltip2 content=\\"Get shareable link\\" placement=\\"top\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                            <Tooltip2Provider>
                                              <Blueprint4.Popover2 modifiers={{...}} content=\\"Get shareable link\\" placement=\\"top\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} className=\\"\\" tabIndex={[undefined]} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                <Manager>
                                                  <Reference>
                                                    <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                      <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                        <ControlButton label=\\"Share\\" icon=\\"share\\" onClick={[Function: onClick]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                          <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[Function: onClick]} icon={{...}} rightIcon={false}>
                                                            <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: onClick]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                              <Blueprint4.Icon icon={{...}}>
                                                                <Blueprint4.Icon icon=\\"share\\" color={[undefined]}>
                                                                  <span aria-hidden={true} icon=\\"share\\" className=\\"bp4-icon bp4-icon-share\\" title={[undefined]}>
                                                                    <svg fill={[undefined]} data-icon=\\"share\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                      <path d=\\"M10.99 13.99h-9v-9h4.76l2-2H.99c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V7.24l-2 2v4.75zm4-14h-5c-.55 0-1 .45-1 1s.45 1 1 1h2.59L7.29 7.28a1 1 0 00-.3.71 1.003 1.003 0 001.71.71l5.29-5.29V6c0 .55.45 1 1 1s1-.45 1-1V1c0-.56-.45-1.01-1-1.01z\\" fillRule=\\"evenodd\\" />
                                                                    </svg>
                                                                  </span>
                                                                </Blueprint4.Icon>
                                                              </Blueprint4.Icon>
                                                              <span className=\\"bp4-button-text\\">
                                                                Share
                                                              </span>
                                                              <Blueprint4.Icon icon={false} />
                                                            </button>
                                                          </Blueprint4.Button>
                                                        </ControlButton>
                                                      </span>
                                                    </Blueprint4.ResizeSensor2>
                                                  </Reference>
                                                  <Popper innerRef={[Function (anonymous)]} placement=\\"top\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                    <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                  </Popper>
                                                </Manager>
                                              </Blueprint4.Popover2>
                                            </Tooltip2Provider>
                                          </Blueprint4.Tooltip2>
                                        </span>
                                      </Blueprint4.ResizeSensor2>
                                    </Reference>
                                    <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                      <Blueprint4.Overlay autoFocus={true} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                    </Popper>
                                  </Manager>
                                </Blueprint4.Popover2>
                              </ControlBarShareButton>
                              <ControlBarChapterSelect handleChapterSelect={[Function (anonymous)]} isFolderModeEnabled={false} sourceChapter={2} sourceVariant=\\"default\\" disabled={false}>
                                <Blueprint4.Select items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function (anonymous)]} itemListRenderer={[Function: chapterListRenderer]} filterable={false} disabled={false}>
                                  <Blueprint4.QueryList items={{...}} onItemSelect={[Function (anonymous)]} itemRenderer={[Function (anonymous)]} itemListRenderer={[Function: chapterListRenderer]} disabled={false} renderer={[Function (anonymous)]} resetOnQuery={true}>
                                    <Blueprint4.Popover autoFocus={false} enforceFocus={false} isOpen={false} disabled={false} position=\\"bottom-left\\" className=\\"\\" onInteraction={[Function (anonymous)]} popoverClassName=\\"bp4-select-popover\\" onOpening={[Function (anonymous)]} onOpened={[Function (anonymous)]} onClosing={[Function (anonymous)]} boundary=\\"scrollParent\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" minimal={false} modifiers={{...}} openOnTargetFocus={true} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} wrapperTagName=\\"span\\">
                                      <Manager>
                                        <span className=\\"bp4-popover-wrapper\\">
                                          <Reference innerRef={[Function (anonymous)]}>
                                            <InnerReference setReferenceNode={[Function (anonymous)]} innerRef={[Function (anonymous)]}>
                                              <Blueprint4.ResizeSensor onResize={[Function (anonymous)]}>
                                                <span onClick={[Function (anonymous)]} aria-haspopup=\\"true\\" className=\\"bp4-popover-target\\">
                                                  <div onKeyDown={[Function (anonymous)]} onKeyUp={[undefined]} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                                    <Blueprint4.Button className=\\"bp4-minimal\\" text=\\"Source §2\\" rightIcon=\\"double-caret-vertical\\" disabled={false}>
                                                      <button type=\\"button\\" className=\\"bp4-button bp4-minimal\\" disabled={false} onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                        <Blueprint4.Icon icon={[undefined]} />
                                                        <span className=\\"bp4-button-text\\">
                                                          Source §2
                                                        </span>
                                                        <Blueprint4.Icon icon=\\"double-caret-vertical\\">
                                                          <span aria-hidden={true} icon=\\"double-caret-vertical\\" className=\\"bp4-icon bp4-icon-double-caret-vertical\\" title={[undefined]}>
                                                            <svg fill={[undefined]} data-icon=\\"double-caret-vertical\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                              <path d=\\"M5 7h6a1.003 1.003 0 00.71-1.71l-3-3C8.53 2.11 8.28 2 8 2s-.53.11-.71.29l-3 3A1.003 1.003 0 005 7zm6 2H5a1.003 1.003 0 00-.71 1.71l3 3c.18.18.43.29.71.29s.53-.11.71-.29l3-3A1.003 1.003 0 0011 9z\\" fillRule=\\"evenodd\\" />
                                                            </svg>
                                                          </span>
                                                        </Blueprint4.Icon>
                                                      </button>
                                                    </Blueprint4.Button>
                                                  </div>
                                                </span>
                                              </Blueprint4.ResizeSensor>
                                            </InnerReference>
                                          </Reference>
                                          <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} className={[undefined]} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[Function (anonymous)]} onOpened={[Function (anonymous)]} onOpening={[Function (anonymous)]} transitionDuration={300} transitionName=\\"bp4-popover\\" usePortal={true} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                        </span>
                                      </Manager>
                                    </Blueprint4.Popover>
                                  </Blueprint4.QueryList>
                                </Blueprint4.Select>
                              </ControlBarChapterSelect>
                              <ControlBarSessionButtons isFolderModeEnabled={false} editorSessionId=\\"\\" getEditorValue={[Function (anonymous)]} handleSetEditorSessionId={[Function: handleSetEditorSessionId]} sharedbConnected={false}>
                                <Blueprint4.Tooltip2 content={[undefined]} disabled={true} compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content={[undefined]} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={true} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                        <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                          <Blueprint4.Popover2 content={{...}} disabled={false} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" matchTargetWidth={false} minimal={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} className=\\"\\" tabIndex={0}>
                                            <Manager>
                                              <Reference>
                                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                  <span aria-haspopup=\\"true\\" className=\\"bp4-popover2-target\\" onClick={[Function (anonymous)]} onKeyDown={[Function: onKeyDown]}>
                                                    <ControlButton label=\\"Session\\" icon=\\"social-media\\" options={{...}} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                                      <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[undefined]} icon={{...}} rightIcon={false}>
                                                        <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[undefined]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                          <Blueprint4.Icon icon={{...}}>
                                                            <Blueprint4.Icon icon=\\"social-media\\" color={[undefined]}>
                                                              <span aria-hidden={true} icon=\\"social-media\\" className=\\"bp4-icon bp4-icon-social-media\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"social-media\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M9.5 4c.4 0 .8-.1 1.1-.3C12 4.5 12.9 6 13 7.6c0 .5.5.9 1 .9.6 0 1-.4 1-1v-.2c-.2-2.4-1.5-4.4-3.5-5.5-.1-1-.9-1.8-2-1.8s-2 .9-2 2 .9 2 2 2zM4 8.5c0-.7-.4-1.3-.9-1.7.3-1.4 1.2-2.6 2.5-3.3.3-.1.6-.4.6-.9s-.4-1-1-1c-.2 0-.3 0-.5.1-1.9 1-3.2 2.8-3.6 5C.4 7.1 0 7.8 0 8.5c0 1.1.9 2 2 2s2-.9 2-2zm8.8 1.2c-1.1 0-2 .9-2 2v.3c-.8.6-1.8.9-2.8.9-1.2 0-2.3-.4-3.2-1.1-.2-.2-.4-.3-.7-.3-.6 0-1 .4-1 1 0 .3.1.6.3.8C4.6 14.4 6.2 15 8 15c1.5 0 3-.5 4.1-1.3.2.1.5.1.7.1 1.1 0 2-.9 2-2s-.9-2.1-2-2.1z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                          </Blueprint4.Icon>
                                                          <span className=\\"bp4-button-text\\">
                                                            Session
                                                          </span>
                                                          <Blueprint4.Icon icon={false} />
                                                        </button>
                                                      </Blueprint4.Button>
                                                    </ControlButton>
                                                  </span>
                                                </Blueprint4.ResizeSensor2>
                                              </Reference>
                                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                <Blueprint4.Overlay autoFocus={true} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                              </Popper>
                                            </Manager>
                                          </Blueprint4.Popover2>
                                        </span>
                                      </Blueprint4.ResizeSensor2>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarSessionButtons>
                              <ControlBarToggleFolderModeButton isFolderModeEnabled={false} isSessionActive={false} isPersistenceActive={false} toggleFolderMode={[Function: toggleFolderMode]}>
                                <Blueprint4.Tooltip2 content=\\"Enable Folder mode\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content=\\"Enable Folder mode\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Manager>
                                        <Reference>
                                          <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                            <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                              <ControlButton label=\\"Folder\\" icon=\\"folder-close\\" options={{...}} onClick={[Function: toggleFolderMode]} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[Function: toggleFolderMode]} icon={{...}} rightIcon={false}>
                                                  <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: toggleFolderMode]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                    <Blueprint4.Icon icon={{...}}>
                                                      <Blueprint4.Icon icon=\\"folder-close\\" color={[undefined]}>
                                                        <span aria-hidden={true} icon=\\"folder-close\\" className=\\"bp4-icon bp4-icon-folder-close\\" title={[undefined]}>
                                                          <svg fill={[undefined]} data-icon=\\"folder-close\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                            <path d=\\"M-.01 14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V7h-16v7zm15-10H7.41L5.7 2.3a.965.965 0 00-.71-.3h-4c-.55 0-1 .45-1 1v3h16V5c0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                                                          </svg>
                                                        </span>
                                                      </Blueprint4.Icon>
                                                    </Blueprint4.Icon>
                                                    <span className=\\"bp4-button-text\\">
                                                      Folder
                                                    </span>
                                                    <Blueprint4.Icon icon={false} />
                                                  </button>
                                                </Blueprint4.Button>
                                              </ControlButton>
                                            </span>
                                          </Blueprint4.ResizeSensor2>
                                        </Reference>
                                        <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                          <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                        </Popper>
                                      </Manager>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarToggleFolderModeButton>
                              <ControlBarGoogleDriveButtons isFolderModeEnabled={false} currentFile={[undefined]} loggedInAs={[undefined]} isDirty={[undefined]} onClickSaveAs={[Function: onClickSaveAs]} onClickOpen={[Function: onClickOpen]} onClickSave={[undefined]} onClickLogOut={[Function: onClickLogOut]} onPopoverOpening={[Function: onPopoverOpening]}>
                                <Blueprint4.Tooltip2 content={[undefined]} disabled={true} compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content={[undefined]} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={true} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                        <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                          <Blueprint4.Popover2 autoFocus={false} content={{...}} onOpening={[Function: onPopoverOpening]} popoverClassName=\\"bp4-popover-dismiss\\" disabled={false} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" matchTargetWidth={false} minimal={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} className=\\"\\" tabIndex={0}>
                                            <Manager>
                                              <Reference>
                                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                  <span aria-haspopup=\\"true\\" className=\\"bp4-popover2-target\\" onClick={[Function (anonymous)]} onKeyDown={[Function: onKeyDown]}>
                                                    <ControlButton label=\\"Google Drive\\" icon=\\"cloud\\" options={{...}} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                                      <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[undefined]} icon={{...}} rightIcon={false}>
                                                        <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[undefined]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                          <Blueprint4.Icon icon={{...}}>
                                                            <Blueprint4.Icon icon=\\"cloud\\" color={[undefined]}>
                                                              <span aria-hidden={true} icon=\\"cloud\\" className=\\"bp4-icon bp4-icon-cloud\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"cloud\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M12 6c-.03 0-.07 0-.1.01A5 5 0 002 7c0 .11.01.22.02.33A3.51 3.51 0 000 10.5C0 12.43 1.57 14 3.5 14H12c2.21 0 4-1.79 4-4s-1.79-4-4-4z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                          </Blueprint4.Icon>
                                                          <span className=\\"bp4-button-text\\">
                                                            Google Drive
                                                          </span>
                                                          <Blueprint4.Icon icon={false} />
                                                        </button>
                                                      </Blueprint4.Button>
                                                    </ControlButton>
                                                  </span>
                                                </Blueprint4.ResizeSensor2>
                                              </Reference>
                                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[Function: onPopoverOpening]} transitionDuration={300} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                              </Popper>
                                            </Manager>
                                          </Blueprint4.Popover2>
                                        </span>
                                      </Blueprint4.ResizeSensor2>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarGoogleDriveButtons>
                              <ControlBarGitHubButtons isFolderModeEnabled={false} loggedInAs={[undefined]} githubSaveInfo={{...}} isDirty={true} onClickOpen={[Function: onClickOpen]} onClickSaveAs={[Function: onClickSaveAs]} onClickSave={[Function: onClickSave]} onClickLogIn={[Function: onClickLogIn]} onClickLogOut={[Function: onClickLogOut]}>
                                <Blueprint4.Tooltip2 content={[undefined]} disabled={true} compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content={[undefined]} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={true} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                        <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                          <Blueprint4.Popover2 autoFocus={false} content={{...}} popoverClassName=\\"bp4-popover-dismiss\\" disabled={false} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} hoverCloseDelay={300} hoverOpenDelay={150} inheritDarkTheme={true} interactionKind=\\"click\\" matchTargetWidth={false} minimal={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" transitionDuration={300} usePortal={true} className=\\"\\" tabIndex={0}>
                                            <Manager>
                                              <Reference>
                                                <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                  <span aria-haspopup=\\"true\\" className=\\"bp4-popover2-target\\" onClick={[Function (anonymous)]} onKeyDown={[Function: onKeyDown]}>
                                                    <ControlButton label=\\"GitHub\\" icon=\\"git-branch\\" options={{...}} isDisabled={false} className=\\"\\" disabled={[undefined]} tabIndex={[undefined]}>
                                                      <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[undefined]} icon={{...}} rightIcon={false}>
                                                        <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[undefined]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                          <Blueprint4.Icon icon={{...}}>
                                                            <Blueprint4.Icon icon=\\"git-branch\\" color={[undefined]}>
                                                              <span aria-hidden={true} icon=\\"git-branch\\" className=\\"bp4-icon bp4-icon-git-branch\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"git-branch\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M12 1c-1.66 0-3 1.34-3 3 0 1.25.76 2.32 1.85 2.77A2.02 2.02 0 019 8H7c-.73 0-1.41.2-2 .55V5.82C6.16 5.4 7 4.3 7 3c0-1.66-1.34-3-3-3S1 1.34 1 3c0 1.3.84 2.4 2 2.82v4.37c-1.16.4-2 1.51-2 2.81 0 1.66 1.34 3 3 3s3-1.34 3-3c0-1.04-.53-1.95-1.32-2.49.35-.31.81-.51 1.32-.51h2c1.92 0 3.52-1.35 3.91-3.15A2.996 2.996 0 0012 1zM4 2c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 12c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm8-9c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                          </Blueprint4.Icon>
                                                          <span className=\\"bp4-button-text\\">
                                                            GitHub
                                                          </span>
                                                          <Blueprint4.Icon icon={false} />
                                                        </button>
                                                      </Blueprint4.Button>
                                                    </ControlButton>
                                                  </span>
                                                </Blueprint4.ResizeSensor2>
                                              </Reference>
                                              <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={true} canOutsideClickClose={true} enforceFocus={true} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={300} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                              </Popper>
                                            </Manager>
                                          </Blueprint4.Popover2>
                                        </span>
                                      </Blueprint4.ResizeSensor2>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarGitHubButtons>
                              <ControlBarExecutionTime execTime={1000} handleChangeExecTime={[Function: handleChangeExecTime]}>
                                <Blueprint4.Tooltip2 content=\\"Execution Time\\" placement=\\"top\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                  <Tooltip2Provider>
                                    <Blueprint4.Popover2 modifiers={{...}} content=\\"Execution Time\\" placement=\\"top\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                      <Manager>
                                        <Reference>
                                          <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                            <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                              <Blueprint4.NumericInput leftIcon=\\"time\\" style={{...}} min={1000} value={1000} onValueChange={[Function: handleChangeExecTime]} allowNumericCharactersOnly={true} buttonPosition=\\"right\\" clampValueOnBlur={false} defaultValue=\\"\\" large={false} majorStepSize={10} minorStepSize={0.1} selectAllOnFocus={false} selectAllOnIncrement={false} small={false} stepSize={1} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                <Blueprint4.ControlGroup className=\\"bp4-numeric-input\\" fill={[undefined]}>
                                                  <div className=\\"bp4-control-group bp4-numeric-input\\">
                                                    <Blueprint4.InputGroup asyncControl={[undefined]} autoComplete=\\"off\\" id=\\"numericInput-1\\" role=\\"spinbutton\\" style={{...}} min={1000} value=\\"1000\\" disabled={[undefined]} tabIndex={0} aria-valuemax={[undefined]} aria-valuemin={1000} aria-valuenow={1000} intent={[undefined]} inputClassName={[undefined]} inputRef={[Function (anonymous)]} large={false} leftElement={[undefined]} leftIcon=\\"time\\" onFocus={[Function (anonymous)]} onBlur={[Function (anonymous)]} onChange={[Function (anonymous)]} onCompositionEnd={[Function (anonymous)]} onCompositionUpdate={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyPress={[Function (anonymous)]} onPaste={[Function (anonymous)]} rightElement={[undefined]} small={false}>
                                                      <div className=\\"bp4-input-group\\">
                                                        <Blueprint4.Icon icon=\\"time\\" aria-hidden={true} tabIndex={-1}>
                                                          <span aria-hidden={true} icon=\\"time\\" tabIndex={-1} className=\\"bp4-icon bp4-icon-time\\" title={[undefined]}>
                                                            <svg fill={[undefined]} data-icon=\\"time\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                              <path d=\\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm1-6.41V4c0-.55-.45-1-1-1s-1 .45-1 1v4c0 .28.11.53.29.71l2 2a1.003 1.003 0 001.42-1.42L9 7.59z\\" fillRule=\\"evenodd\\" />
                                                            </svg>
                                                          </span>
                                                        </Blueprint4.Icon>
                                                        <input type=\\"text\\" autoComplete=\\"off\\" id=\\"numericInput-1\\" role=\\"spinbutton\\" style={{...}} min={1000} value=\\"1000\\" disabled={[undefined]} tabIndex={0} aria-valuemax={[undefined]} aria-valuemin={1000} aria-valuenow={1000} onFocus={[Function (anonymous)]} onBlur={[Function (anonymous)]} onChange={[Function (anonymous)]} onCompositionEnd={[Function (anonymous)]} onCompositionUpdate={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyPress={[Function (anonymous)]} onPaste={[Function (anonymous)]} className=\\"bp4-input\\" />
                                                      </div>
                                                    </Blueprint4.InputGroup>
                                                    <Blueprint4.ButtonGroup className=\\"bp4-fixed\\" vertical={true}>
                                                      <div className=\\"bp4-button-group bp4-vertical bp4-fixed\\">
                                                        <Blueprint4.Button aria-label=\\"increment\\" aria-controls=\\"numericInput-1\\" disabled={false} icon=\\"chevron-up\\" intent={[undefined]} onKeyDown={[Function: onKeyDown]} onMouseDown={[Function: onMouseDown]}>
                                                          <button type=\\"button\\" aria-label=\\"increment\\" aria-controls=\\"numericInput-1\\" disabled={false} onKeyDown={[Function (anonymous)]} onMouseDown={[Function: onMouseDown]} className=\\"bp4-button\\" onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                            <Blueprint4.Icon icon=\\"chevron-up\\">
                                                              <span aria-hidden={true} icon=\\"chevron-up\\" className=\\"bp4-icon bp4-icon-chevron-up\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"chevron-up\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M12.71 9.29l-4-4C8.53 5.11 8.28 5 8 5s-.53.11-.71.29l-4 4a1.003 1.003 0 001.42 1.42L8 7.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                            <Blueprint4.Icon icon={[undefined]} />
                                                          </button>
                                                        </Blueprint4.Button>
                                                        <Blueprint4.Button aria-label=\\"decrement\\" aria-controls=\\"numericInput-1\\" disabled={true} icon=\\"chevron-down\\" intent={[undefined]} onKeyDown={[Function: onKeyDown]} onMouseDown={[Function: onMouseDown]}>
                                                          <button type=\\"button\\" aria-label=\\"decrement\\" aria-controls=\\"numericInput-1\\" disabled={true} onKeyDown={[Function (anonymous)]} onMouseDown={[Function: onMouseDown]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onClick={[undefined]} onFocus={[undefined]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                            <Blueprint4.Icon icon=\\"chevron-down\\">
                                                              <span aria-hidden={true} icon=\\"chevron-down\\" className=\\"bp4-icon bp4-icon-chevron-down\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"chevron-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M12 5c-.28 0-.53.11-.71.29L8 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42l4 4c.18.18.43.29.71.29s.53-.11.71-.29l4-4A1.003 1.003 0 0012 5z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                            <Blueprint4.Icon icon={[undefined]} />
                                                          </button>
                                                        </Blueprint4.Button>
                                                      </div>
                                                    </Blueprint4.ButtonGroup>
                                                  </div>
                                                </Blueprint4.ControlGroup>
                                              </Blueprint4.NumericInput>
                                            </span>
                                          </Blueprint4.ResizeSensor2>
                                        </Reference>
                                        <Popper innerRef={[Function (anonymous)]} placement=\\"top\\" strategy=\\"absolute\\" modifiers={{...}}>
                                          <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                        </Popper>
                                      </Manager>
                                    </Blueprint4.Popover2>
                                  </Tooltip2Provider>
                                </Blueprint4.Tooltip2>
                              </ControlBarExecutionTime>
                            </div>
                            <div className=\\"ControlBar_editingWorkspace bp4-button-group\\" />
                          </div>
                        </ControlBar>
                        <div className=\\"workspace-parent\\">
                          <Resizable enable={{...}} minWidth=\\"auto\\" maxWidth=\\"50%\\" onResize={[Function: toggleSideBarDividerDisplay]} onResizeStop={[Function: onResizeStop]} size={{...}} defaultSize={{...}} as=\\"div\\" onResizeStart={[Function: onResizeStart]} style={{...}} grid={{...}} lockAspectRatio={false} lockAspectRatioExtraWidth={0} lockAspectRatioExtraHeight={0} scale={1} resizeRatio={1} snapGap={0}>
                            <div style={{...}} className={[undefined]}>
                              <SideBar tabs={{...}} isExpanded={true} expandSideBar={[Function: expandSideBar]} collapseSideBar={[Function: collapseSideBar]}>
                                <div className=\\"sidebar-container\\" />
                              </SideBar>
                              <div className={[undefined]} style={[undefined]} />
                            </div>
                          </Resizable>
                          <div className=\\"row content-parent\\">
                            <div className=\\"editor-divider\\" />
                            <Resizable className=\\"resize-editor left-parent\\" enable={{...}} minWidth={0} onResize={[Function: toggleEditorDividerDisplay]} defaultSize={{...}} as=\\"div\\" onResizeStart={[Function: onResizeStart]} onResizeStop={[Function: onResizeStop]} style={{...}} grid={{...}} lockAspectRatio={false} lockAspectRatioExtraWidth={0} lockAspectRatioExtraHeight={0} scale={1} resizeRatio={1} snapGap={0}>
                              <div style={{...}} className=\\"resize-editor left-parent\\">
                                <EditorContainer editorSessionId=\\"\\" isEditorAutorun={false} editorVariant=\\"normal\\" baseFilePath=\\"/playground\\" isFolderModeEnabled={false} activeEditorTabIndex={0} setActiveEditorTabIndex={[Function (anonymous)]} removeEditorTabByIndex={[Function (anonymous)]} editorTabs={{...}} handleDeclarationNavigate={[Function (anonymous)]} handleEditorEval={[Function: handleEditorEval]} handlePromptAutocomplete={[Function (anonymous)]} handleSendReplInputToOutput={[Function (anonymous)]} handleSetSharedbConnected={[Function (anonymous)]} onChange={[Function (anonymous)]} onCursorChange={[Function (anonymous)]} onSelectionChange={[Function (anonymous)]} onLoad={[undefined]} sourceChapter={2} externalLibraryName=\\"NONE\\" sourceVariant=\\"default\\" handleEditorValueChange={[Function (anonymous)]} handleEditorUpdateBreakpoints={[Function (anonymous)]}>
                                  <div className=\\"editor-container\\">
                                    <Editor editorSessionId=\\"\\" isEditorAutorun={false} editorVariant=\\"normal\\" handleDeclarationNavigate={[Function (anonymous)]} handleEditorEval={[Function: handleEditorEval]} handlePromptAutocomplete={[Function (anonymous)]} handleSendReplInputToOutput={[Function (anonymous)]} handleSetSharedbConnected={[Function (anonymous)]} onChange={[Function (anonymous)]} onCursorChange={[Function (anonymous)]} onSelectionChange={[Function (anonymous)]} onLoad={[undefined]} sourceChapter={2} externalLibraryName=\\"NONE\\" sourceVariant=\\"default\\" handleEditorValueChange={[Function (anonymous)]} handleEditorUpdateBreakpoints={[Function (anonymous)]} editorTabIndex={0} editorValue=\\"display(\\\\'hello!\\\\');\\" filePath=\\"/playground/program.js\\" highlightedLines={{...}} breakpoints={{...}}>
                                      <Memo() editorSessionId=\\"\\" isEditorAutorun={false} editorVariant=\\"normal\\" handleDeclarationNavigate={[Function (anonymous)]} handleEditorEval={[Function: handleEditorEval]} handlePromptAutocomplete={[Function (anonymous)]} handleSendReplInputToOutput={[Function (anonymous)]} handleSetSharedbConnected={[Function (anonymous)]} onChange={[Function (anonymous)]} onCursorChange={[Function (anonymous)]} onSelectionChange={[Function (anonymous)]} onLoad={[undefined]} sourceChapter={2} externalLibraryName=\\"NONE\\" sourceVariant=\\"default\\" handleEditorValueChange={[Function (anonymous)]} handleEditorUpdateBreakpoints={[Function (anonymous)]} editorTabIndex={0} editorValue=\\"display(\\\\'hello!\\\\');\\" filePath=\\"/playground/program.js\\" highlightedLines={{...}} breakpoints={{...}} session={{...}} editorBinding=\\"\\" hooks={{...}}>
                                        <HotKeysEnabled className=\\"Editor bp4-card bp4-elevation-0\\" handlers={{...}}>
                                          <HotKeysWrapper hotKeys={{...}} className=\\"Editor bp4-card bp4-elevation-0\\">
                                            <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" className=\\"Editor bp4-card bp4-elevation-0\\">
                                              <div className=\\"row editor-react-ace\\">
                                                <ReactAce className=\\"react-ace\\" editorProps={{...}} markers={{...}} fontSize={17} height=\\"100%\\" highlightActiveLine={false} mode=\\"source2defaultNONE\\" theme=\\"source\\" value=\\"display(\\\\'hello!\\\\');\\" width=\\"100%\\" setOptions={{...}} keyboardHandler=\\"\\" onChange={[Function (anonymous)]} onCursorChange={[Function (anonymous)]} commands={{...}} onSelectionChange={[Function (anonymous)]} name=\\"ace-editor\\" focus={false} enableSnippets={false} showGutter={true} onPaste={{...}} onLoad={{...}} onScroll={{...}} minLines={{...}} maxLines={{...}} readOnly={false} showPrintMargin={true} tabSize={4} cursorStart={1} style={{...}} scrollMargin={{...}} wrapEnabled={false} enableBasicAutocompletion={false} enableLiveAutocompletion={false} placeholder={{...}} navigateToFileEnd={true}>
                                                  <div id=\\"ace-editor\\" style={{...}} />
                                                </ReactAce>
                                              </div>
                                            </div>
                                          </HotKeysWrapper>
                                        </HotKeysEnabled>
                                      </Memo()>
                                    </Editor>
                                  </div>
                                </EditorContainer>
                                <div className={[undefined]} style={[undefined]}>
                                  <Resizer direction=\\"right\\" onResizeStart={[Function: bound ]} replaceStyles={[undefined]} className={[undefined]}>
                                    <div className=\\"\\" style={{...}} onMouseDown={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} />
                                  </Resizer>
                                </div>
                              </div>
                            </Resizable>
                            <div className=\\"right-parent\\">
                              <Resizable bounds=\\"parent\\" className=\\"resize-side-content\\" enable={{...}} onResize={[Function: toggleDividerDisplay]} onResizeStop={[Function: onResizeStop]} as=\\"div\\" onResizeStart={[Function: onResizeStart]} style={{...}} grid={{...}} lockAspectRatio={false} lockAspectRatioExtraWidth={0} lockAspectRatioExtraHeight={0} scale={1} resizeRatio={1} snapGap={0}>
                                <div style={{...}} className=\\"resize-side-content\\">
                                  <SideContent selectedTabId=\\"introduction\\" onChange={[Function (anonymous)]} tabs={{...}} workspaceLocation=\\"playground\\" sideContentHeight={[undefined]}>
                                    <GenericSideContent onChange={[Function (anonymous)]} tabs={{...}} workspaceLocation=\\"playground\\" renderFunction={[Function: renderFunction]}>
                                      <div className=\\"side-content\\">
                                        <Blueprint4.Card elevation={0} interactive={false}>
                                          <div className=\\"bp4-card bp4-elevation-0\\">
                                            <div className=\\"side-content-tabs\\">
                                              <Blueprint4.Tabs id=\\"side-content-tabs\\" onChange={[Function (anonymous)]} renderActiveTabPanelOnly={false} selectedTabId=\\"introduction\\" animate={true} fill={false} large={false} vertical={false}>
                                                <div className=\\"bp4-tabs\\">
                                                  <div className=\\"bp4-tab-list\\" onKeyDown={[Function (anonymous)]} onKeyPress={[Function (anonymous)]} role=\\"tablist\\">
                                                    <div className=\\"bp4-tab-indicator-wrapper\\" style={{...}}>
                                                      <div className=\\"bp4-tab-indicator\\" />
                                                    </div>
                                                    <Blueprint4.TabTitle id=\\"introduction\\" title={{...}} disabled={false} className=\\"side-content-tab\\" panel={{...}} parentId=\\"side-content-tabs\\" onClick={[Function (anonymous)]} selected={true}>
                                                      <div onClick={[Function (anonymous)]} aria-controls=\\"bp4-tab-panel_side-content-tabs_introduction\\" aria-disabled={false} aria-expanded={true} aria-selected={true} className=\\"bp4-tab side-content-tab\\" data-tab-id=\\"introduction\\" id=\\"bp4-tab-title_side-content-tabs_introduction\\" role=\\"tab\\" tabIndex={0}>
                                                        <Blueprint4.Tooltip2 content=\\"Introduction\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                          <Tooltip2Provider>
                                                            <Blueprint4.Popover2 modifiers={{...}} content=\\"Introduction\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                              <Manager>
                                                                <Reference>
                                                                  <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                                    <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                                      <div className=\\"side-content-tooltip\\" id=\\"introduction-icon\\" disabled={[undefined]} tabIndex={0}>
                                                                        <Blueprint4.Icon icon=\\"home\\" iconSize={20}>
                                                                          <span aria-hidden={true} icon=\\"home\\" className=\\"bp4-icon bp4-icon-home\\" title={[undefined]}>
                                                                            <svg fill={[undefined]} data-icon=\\"home\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                              <path d=\\"M2 12v7c0 .55.45 1 1 1h5v-7h4v7h5c.55 0 1-.45 1-1v-7l-8-8-8 8zm17.71-2.71L17 6.59V3c0-.55-.45-1-1-1s-1 .45-1 1v1.59L10.71.3C10.53.11 10.28 0 10 0s-.53.11-.71.29l-9 9a1.003 1.003 0 001.42 1.42L10 2.41l8.29 8.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71z\\" fillRule=\\"evenodd\\" />
                                                                            </svg>
                                                                          </span>
                                                                        </Blueprint4.Icon>
                                                                      </div>
                                                                    </span>
                                                                  </Blueprint4.ResizeSensor2>
                                                                </Reference>
                                                                <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                                  <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                                </Popper>
                                                              </Manager>
                                                            </Blueprint4.Popover2>
                                                          </Tooltip2Provider>
                                                        </Blueprint4.Tooltip2>
                                                      </div>
                                                    </Blueprint4.TabTitle>
                                                    <Blueprint4.TabTitle id=\\"data_visualizer\\" title={{...}} disabled={false} className=\\"side-content-tab\\" panel={{...}} parentId=\\"side-content-tabs\\" onClick={[Function (anonymous)]} selected={false}>
                                                      <div onClick={[Function (anonymous)]} aria-controls=\\"bp4-tab-panel_side-content-tabs_data_visualizer\\" aria-disabled={false} aria-expanded={false} aria-selected={false} className=\\"bp4-tab side-content-tab\\" data-tab-id=\\"data_visualizer\\" id=\\"bp4-tab-title_side-content-tabs_data_visualizer\\" role=\\"tab\\" tabIndex={-1}>
                                                        <Blueprint4.Tooltip2 content=\\"Data Visualizer\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                          <Tooltip2Provider>
                                                            <Blueprint4.Popover2 modifiers={{...}} content=\\"Data Visualizer\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                              <Manager>
                                                                <Reference>
                                                                  <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                                    <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                                      <div className=\\"side-content-tooltip\\" id=\\"data_visualizer-icon\\" disabled={[undefined]} tabIndex={0}>
                                                                        <Blueprint4.Icon icon=\\"eye-open\\" iconSize={20}>
                                                                          <span aria-hidden={true} icon=\\"eye-open\\" className=\\"bp4-icon bp4-icon-eye-open\\" title={[undefined]}>
                                                                            <svg fill={[undefined]} data-icon=\\"eye-open\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                              <path d=\\"M10.01 7.984A2.008 2.008 0 008.012 9.99c0 1.103.9 2.006 1.998 2.006a2.008 2.008 0 001.998-2.006c0-1.103-.9-2.006-1.998-2.006zM20 9.96v-.03-.01-.02-.02a.827.827 0 00-.21-.442c-.64-.802-1.398-1.514-2.168-2.166-1.658-1.404-3.566-2.587-5.664-3.058a8.982 8.982 0 00-3.656-.05c-1.11.2-2.178.641-3.177 1.183-1.569.852-2.997 2.016-4.246 3.33-.23.25-.46.49-.67.761-.279.351-.279.773 0 1.124.64.802 1.4 1.514 2.169 2.166 1.658 1.404 3.566 2.577 5.664 3.058 1.209.271 2.438.281 3.656.05 1.11-.21 2.178-.651 3.177-1.193 1.569-.852 2.997-2.016 4.246-3.33.23-.24.46-.49.67-.751.11-.12.179-.271.209-.442v-.02-.02-.01-.03V10v-.04zM10.01 14A4.003 4.003 0 016.014 9.99a4.003 4.003 0 013.996-4.011 4.003 4.003 0 013.996 4.011 4.003 4.003 0 01-3.996 4.011z\\" fillRule=\\"evenodd\\" />
                                                                            </svg>
                                                                          </span>
                                                                        </Blueprint4.Icon>
                                                                      </div>
                                                                    </span>
                                                                  </Blueprint4.ResizeSensor2>
                                                                </Reference>
                                                                <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                                  <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                                </Popper>
                                                              </Manager>
                                                            </Blueprint4.Popover2>
                                                          </Tooltip2Provider>
                                                        </Blueprint4.Tooltip2>
                                                      </div>
                                                    </Blueprint4.TabTitle>
                                                    <Blueprint4.TabTitle id=\\"subst_visualiser\\" title={{...}} disabled={false} className=\\"side-content-tab\\" panel={{...}} parentId=\\"side-content-tabs\\" onClick={[Function (anonymous)]} selected={false}>
                                                      <div onClick={[Function (anonymous)]} aria-controls=\\"bp4-tab-panel_side-content-tabs_subst_visualiser\\" aria-disabled={false} aria-expanded={false} aria-selected={false} className=\\"bp4-tab side-content-tab\\" data-tab-id=\\"subst_visualiser\\" id=\\"bp4-tab-title_side-content-tabs_subst_visualiser\\" role=\\"tab\\" tabIndex={-1}>
                                                        <Blueprint4.Tooltip2 content=\\"Stepper\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                          <Tooltip2Provider>
                                                            <Blueprint4.Popover2 modifiers={{...}} content=\\"Stepper\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                              <Manager>
                                                                <Reference>
                                                                  <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                                    <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                                      <div className=\\"side-content-tooltip\\" id=\\"subst_visualiser-icon\\" disabled={[undefined]} tabIndex={0}>
                                                                        <Blueprint4.Icon icon=\\"flow-review\\" iconSize={20}>
                                                                          <span aria-hidden={true} icon=\\"flow-review\\" className=\\"bp4-icon bp4-icon-flow-review\\" title={[undefined]}>
                                                                            <svg fill={[undefined]} data-icon=\\"flow-review\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                              <path d=\\"M6.13 9.004A4.005 4.005 0 0110.012 6c1.87 0 3.44 1.278 3.881 3.005h2.768l-2.354-2.317a.97.97 0 01-.283-.691c0-.536.462-.995 1-.995.273 0 .517.107.693.283l4 4.041a.97.97 0 01.284.692.956.956 0 01-.293.682l-3.991 3.997a.944.944 0 01-.694.292c-.537 0-1-.46-1-.997a.97.97 0 01.284-.692l2.345-2.29h-2.765a4.005 4.005 0 01-3.875 2.981 4.005 4.005 0 01-3.874-2.981H3.349l2.376 2.308a.97.97 0 01.283.691 1 1 0 01-.994.983.989.989 0 01-.713-.291L.293 10.699A.956.956 0 010 10.017a.97.97 0 01.283-.692l4.03-4.037a.996.996 0 01.701-.283c.537 0 .994.464.994 1a.97.97 0 01-.283.691L3.34 9.004h2.79z\\" fillRule=\\"evenodd\\" />
                                                                            </svg>
                                                                          </span>
                                                                        </Blueprint4.Icon>
                                                                      </div>
                                                                    </span>
                                                                  </Blueprint4.ResizeSensor2>
                                                                </Reference>
                                                                <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                                  <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                                </Popper>
                                                              </Manager>
                                                            </Blueprint4.Popover2>
                                                          </Tooltip2Provider>
                                                        </Blueprint4.Tooltip2>
                                                      </div>
                                                    </Blueprint4.TabTitle>
                                                    <Blueprint4.TabTitle id=\\"remote_execution\\" title={{...}} disabled={false} className=\\"side-content-tab\\" panel={{...}} parentId=\\"side-content-tabs\\" onClick={[Function (anonymous)]} selected={false}>
                                                      <div onClick={[Function (anonymous)]} aria-controls=\\"bp4-tab-panel_side-content-tabs_remote_execution\\" aria-disabled={false} aria-expanded={false} aria-selected={false} className=\\"bp4-tab side-content-tab\\" data-tab-id=\\"remote_execution\\" id=\\"bp4-tab-title_side-content-tabs_remote_execution\\" role=\\"tab\\" tabIndex={-1}>
                                                        <Blueprint4.Tooltip2 content=\\"Remote Execution\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                          <Tooltip2Provider>
                                                            <Blueprint4.Popover2 modifiers={{...}} content=\\"Remote Execution\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                              <Manager>
                                                                <Reference>
                                                                  <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                                    <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                                      <div className=\\"side-content-tooltip\\" id=\\"remote_execution-icon\\" disabled={[undefined]} tabIndex={0}>
                                                                        <Blueprint4.Icon icon=\\"satellite\\" iconSize={20}>
                                                                          <span aria-hidden={true} icon=\\"satellite\\" className=\\"bp4-icon bp4-icon-satellite\\" title={[undefined]}>
                                                                            <svg fill={[undefined]} data-icon=\\"satellite\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                              <path d=\\"M9 18c.6 0 1 .4 1 1s-.4 1-1 1c-5 0-9-4-9-9 0-.6.4-1 1-1s1 .4 1 1c0 3.9 3.1 7 7 7zm0-4c.6 0 1 .4 1 1s-.4 1-1 1c-2.8 0-5-2.2-5-5 0-.6.4-1 1-1s1 .4 1 1c0 1.7 1.3 3 3 3zm5.7-3.7c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4l-1.4 1.4c-.4.4-1 .4-1.4 0l-3.6-3.6c-.4-.4-.4-1 0-1.4l1.4-1.4zM4.7.3c.4-.4 1-.4 1.4 0l3.6 3.6c.4.4.4 1 0 1.4L8.3 6.7c-.4.4-1 .4-1.4 0L3.3 3.1c-.4-.4-.4-1 0-1.4L4.7.3zm11.1 1c.4-.4 1-.4 1.4 0l1.6 1.6c.4.4.4 1 0 1.4l-6.5 6.5c-.4.4-1 .4-1.4 0L9.3 9.2c-.4-.4-.4-1 0-1.4l6.5-6.5zM9 12c-.6 0-1-.4-1-1s.4-1 1-1 1 .4 1 1-.4 1-1 1z\\" fillRule=\\"evenodd\\" />
                                                                            </svg>
                                                                          </span>
                                                                        </Blueprint4.Icon>
                                                                      </div>
                                                                    </span>
                                                                  </Blueprint4.ResizeSensor2>
                                                                </Reference>
                                                                <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                                  <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                                </Popper>
                                                              </Manager>
                                                            </Blueprint4.Popover2>
                                                          </Tooltip2Provider>
                                                        </Blueprint4.Tooltip2>
                                                      </div>
                                                    </Blueprint4.TabTitle>
                                                  </div>
                                                  <div aria-labelledby=\\"bp4-tab-title_side-content-tabs_introduction\\" aria-hidden={false} className=\\"bp4-tab-panel side-content-tab\\" id=\\"bp4-tab-panel_side-content-tabs_introduction\\" role=\\"tabpanel\\">
                                                    <div className=\\"side-content-text\\">
                                                      <Memo(Markdown) content=\\"\\\\nWelcome to the Source Academy playground!\\\\n\\\\nThe book [_Structure and Interpretation of Computer Programs, JavaScript Edition_](https://sourceacademy.org/sicpjs/)\\\\nuses JavaScript sublanguages that we call [_Source_](https://docs.sourceacademy.org/). You have chosen the sublanguage [_Source §2_](https://docs.sourceacademy.org/source_2/).\\\\n\\\\nIn the editor on the left, you can use the [_Ace keyboard shortcuts_](https://github.com/ajaxorg/ace/wiki/Default-Keyboard-Shortcuts) \\\\nand also the [_Source Academy keyboard shortcuts_](https://github.com/source-academy/frontend/wiki/Source-Academy-Keyboard-Shortcuts).\\\\n\\\\n\\" openLinksInNewWindow={true} workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]}>
                                                        <div className=\\"md bp4-running-text\\" dangerouslySetInnerHTML={{...}} />
                                                      </Memo(Markdown)>
                                                    </div>
                                                  </div>
                                                  <div aria-labelledby=\\"bp4-tab-title_side-content-tabs_data_visualizer\\" aria-hidden={true} className=\\"bp4-tab-panel side-content-tab\\" id=\\"bp4-tab-panel_side-content-tabs_data_visualizer\\" role=\\"tabpanel\\">
                                                    <div className=\\"side-content-text\\">
                                                      <SideContentDataVisualizer workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]}>
                                                        <GlobalHotKeys keyMap={{...}} handlers={{...}}>
                                                          <div className=\\"sa-data-visualizer bp4-dark\\">
                                                            <p id=\\"data-visualizer-default-text\\" className=\\"bp4-running-text\\">
                                                              The data visualizer helps you to visualize data structures.
                                                              <br />
                                                              <br />
                                                              It is activated by calling the function
                                                               
                                                              <code>
                                                                draw_data(x
                                                                <sub>
                                                                  1
                                                                </sub>
                                                                , x
                                                                <sub>
                                                                  2
                                                                </sub>
                                                                , ... x
                                                                <sub>
                                                                  n
                                                                </sub>
                                                                )
                                                              </code>
                                                              , where
                                                               
                                                              <code>
                                                                x
                                                                <sub>
                                                                  k
                                                                </sub>
                                                              </code>
                                                               
                                                              would be the
                                                               
                                                              <code>
                                                                k
                                                                <sup>
                                                                  th
                                                                </sup>
                                                              </code>
                                                               
                                                              data structure that you want to visualize and 
                                                              <code>
                                                                n
                                                              </code>
                                                               is the number of structures.
                                                              <br />
                                                              <br />
                                                              The data visualizer uses box-and-pointer diagrams, as introduced in
                                                               
                                                              <a href=\\"https://sourceacademy.org/sicpjs/2.2\\" rel=\\"noopener noreferrer\\" target=\\"_blank\\">
                                                                <i>
                                                                  Structure and Interpretation of Computer Programs, JavaScript Edition, Chapter 2, Section 2
                                                                </i>
                                                              </a>
                                                              .
                                                            </p>
                                                          </div>
                                                        </GlobalHotKeys>
                                                      </SideContentDataVisualizer>
                                                    </div>
                                                  </div>
                                                  <div aria-labelledby=\\"bp4-tab-title_side-content-tabs_subst_visualiser\\" aria-hidden={true} className=\\"bp4-tab-panel side-content-tab\\" id=\\"bp4-tab-panel_side-content-tabs_subst_visualiser\\" role=\\"tabpanel\\">
                                                    <div className=\\"side-content-text\\">
                                                      <SideContentSubstVisualizer content={{...}} workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]}>
                                                        <HotKeysEnabled keyMap={{...}} handlers={{...}}>
                                                          <HotKeysWrapper hotKeys={{...}}>
                                                            <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" onKeyDown={[Function: bound _handleKeyDown]} onKeyPress={[Function: bound _handleKeyPress]} onKeyUp={[Function: bound _handleKeyUp]}>
                                                              <div>
                                                                <div className=\\"sa-substituter bp4-dark\\">
                                                                  <Blueprint4.Slider disabled={true} min={1} max={0} onChange={[Function (anonymous)]} value={1} showTrackFill={true} stepSize={1} vertical={false} initialValue={0} intent=\\"primary\\">
                                                                    <Blueprint4.MultiSlider disabled={true} min={1} max={0} showTrackFill={true} stepSize={1} vertical={false} defaultTrackIntent=\\"none\\">
                                                                      <div className=\\"bp4-slider bp4-disabled\\" onMouseDown={[Function (anonymous)]} onTouchStart={[Function (anonymous)]}>
                                                                        <div className=\\"bp4-slider-track\\">
                                                                          <div className=\\"bp4-slider-progress\\" style={{...}} />
                                                                          <div className=\\"bp4-slider-progress bp4-intent-primary\\" style={{...}} />
                                                                          <div className=\\"bp4-slider-progress\\" style={{...}} />
                                                                        </div>
                                                                        <div className=\\"bp4-slider-axis\\" />
                                                                        <Blueprint4.SliderHandle htmlProps={[undefined]} className=\\"\\" disabled={true} label=\\"1\\" max={0} min={1} onChange={[Function (anonymous)]} onRelease={[Function (anonymous)]} stepSize={1} tickSize={-0} tickSizeRatio={-1} value={1} vertical={false}>
                                                                          <span role=\\"slider\\" tabIndex={0} className=\\"bp4-slider-handle\\" onKeyDown={[undefined]} onKeyUp={[undefined]} onMouseDown={[undefined]} onTouchStart={[undefined]} style={{...}} aria-valuemin={1} aria-valuemax={0} aria-valuenow={1} aria-orientation=\\"horizontal\\">
                                                                            <span className=\\"bp4-slider-label\\">
                                                                              1
                                                                            </span>
                                                                          </span>
                                                                        </Blueprint4.SliderHandle>
                                                                      </div>
                                                                    </Blueprint4.MultiSlider>
                                                                  </Blueprint4.Slider>
                                                                  <div style={{...}}>
                                                                    <Blueprint4.ButtonGroup>
                                                                      <div className=\\"bp4-button-group\\">
                                                                        <Blueprint4.Button disabled={true} icon=\\"double-chevron-left\\" onClick={[Function (anonymous)]}>
                                                                          <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                                            <Blueprint4.Icon icon=\\"double-chevron-left\\">
                                                                              <span aria-hidden={true} icon=\\"double-chevron-left\\" className=\\"bp4-icon bp4-icon-double-chevron-left\\" title={[undefined]}>
                                                                                <svg fill={[undefined]} data-icon=\\"double-chevron-left\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                                  <path d=\\"M4.41 8L7.7 4.71c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C2.11 7.47 2 7.72 2 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L4.41 8zm5 0l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C7.11 7.47 7 7.72 7 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L9.41 8z\\" fillRule=\\"evenodd\\" />
                                                                                </svg>
                                                                              </span>
                                                                            </Blueprint4.Icon>
                                                                            <Blueprint4.Icon icon={[undefined]} />
                                                                          </button>
                                                                        </Blueprint4.Button>
                                                                        <Blueprint4.Button disabled={true} icon=\\"chevron-left\\" onClick={[Function (anonymous)]}>
                                                                          <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                                            <Blueprint4.Icon icon=\\"chevron-left\\">
                                                                              <span aria-hidden={true} icon=\\"chevron-left\\" className=\\"bp4-icon bp4-icon-chevron-left\\" title={[undefined]}>
                                                                                <svg fill={[undefined]} data-icon=\\"chevron-left\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                                  <path d=\\"M7.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71l-4 4C5.11 7.47 5 7.72 5 8c0 .28.11.53.29.71l4 4a1.003 1.003 0 001.42-1.42L7.41 8z\\" fillRule=\\"evenodd\\" />
                                                                                </svg>
                                                                              </span>
                                                                            </Blueprint4.Icon>
                                                                            <Blueprint4.Icon icon={[undefined]} />
                                                                          </button>
                                                                        </Blueprint4.Button>
                                                                        <Blueprint4.Button disabled={true} icon=\\"chevron-right\\" onClick={[Function (anonymous)]}>
                                                                          <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                                            <Blueprint4.Icon icon=\\"chevron-right\\">
                                                                              <span aria-hidden={true} icon=\\"chevron-right\\" className=\\"bp4-icon bp4-icon-chevron-right\\" title={[undefined]}>
                                                                                <svg fill={[undefined]} data-icon=\\"chevron-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                                  <path d=\\"M10.71 7.29l-4-4a1.003 1.003 0 00-1.42 1.42L8.59 8 5.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z\\" fillRule=\\"evenodd\\" />
                                                                                </svg>
                                                                              </span>
                                                                            </Blueprint4.Icon>
                                                                            <Blueprint4.Icon icon={[undefined]} />
                                                                          </button>
                                                                        </Blueprint4.Button>
                                                                        <Blueprint4.Button disabled={true} icon=\\"double-chevron-right\\" onClick={[Function (anonymous)]}>
                                                                          <button type=\\"button\\" disabled={true} onClick={[undefined]} className=\\"bp4-button bp4-disabled\\" onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={-1}>
                                                                            <Blueprint4.Icon icon=\\"double-chevron-right\\">
                                                                              <span aria-hidden={true} icon=\\"double-chevron-right\\" className=\\"bp4-icon bp4-icon-double-chevron-right\\" title={[undefined]}>
                                                                                <svg fill={[undefined]} data-icon=\\"double-chevron-right\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                                  <path d=\\"M9 8c0-.28-.11-.53-.29-.71l-4-4a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4C8.89 8.53 9 8.28 9 8zm4.71-.71l-4-4a1.003 1.003 0 00-1.42 1.42L11.59 8 8.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4-4c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71z\\" fillRule=\\"evenodd\\" />
                                                                                </svg>
                                                                              </span>
                                                                            </Blueprint4.Icon>
                                                                            <Blueprint4.Icon icon={[undefined]} />
                                                                          </button>
                                                                        </Blueprint4.Button>
                                                                      </div>
                                                                    </Blueprint4.ButtonGroup>
                                                                  </div>
                                                                   
                                                                  <br />
                                                                  <SubstDefaultText>
                                                                    <div>
                                                                      <div id=\\"substituter-default-text\\" className=\\"bp4-running-text\\">
                                                                        Welcome to the Stepper!
                                                                        <br />
                                                                        <br />
                                                                        On this tab, the REPL will be hidden from view, so do check that your code has no errors before running the stepper. You may use this tool by writing your program on the left, then dragging the slider above to see its evaluation.
                                                                        <br />
                                                                        <br />
                                                                        On even-numbered steps, the part of the program that will be evaluated next is highlighted in yellow. On odd-numbered steps, the result of the evaluation is highlighted in green. You can change the maximum steps limit (500-5000, default 1000) in the control bar.
                                                                        <br />
                                                                        <br />
                                                                        <Blueprint4.Divider>
                                                                          <div className=\\"bp4-divider\\" />
                                                                        </Blueprint4.Divider>
                                                                        Some useful keyboard shortcuts:
                                                                        <br />
                                                                        <br />
                                                                        a: Move to the first step
                                                                        <br />
                                                                        e: Move to the last step
                                                                        <br />
                                                                        f: Move to the next step
                                                                        <br />
                                                                        b: Move to the previous step
                                                                        <br />
                                                                        <br />
                                                                        Note that these shortcuts are only active when the browser focus is on this tab (click on or above the explanation text).
                                                                      </div>
                                                                    </div>
                                                                  </SubstDefaultText>
                                                                </div>
                                                              </div>
                                                            </div>
                                                          </HotKeysWrapper>
                                                        </HotKeysEnabled>
                                                      </SideContentSubstVisualizer>
                                                    </div>
                                                  </div>
                                                  <div aria-labelledby=\\"bp4-tab-title_side-content-tabs_remote_execution\\" aria-hidden={true} className=\\"bp4-tab-panel side-content-tab\\" id=\\"bp4-tab-panel_side-content-tabs_remote_execution\\" role=\\"tabpanel\\">
                                                    <div className=\\"side-content-text\\">
                                                      <SideContentRemoteExecution workspace=\\"playground\\" secretParams={[undefined]} callbackFunction={[Function: bound dispatchAction]} workspaceLocation=\\"playground\\" editorWidth={[undefined]} sideContentHeight={[undefined]}>
                                                        <Blueprint4.Callout intent=\\"danger\\">
                                                          <div className=\\"bp4-callout bp4-intent-danger bp4-callout-icon\\">
                                                            <Blueprint4.Icon icon=\\"error\\" aria-hidden={true} tabIndex={-1}>
                                                              <span aria-hidden={true} icon=\\"error\\" tabIndex={-1} className=\\"bp4-icon bp4-icon-error\\" title={[undefined]}>
                                                                <svg fill={[undefined]} data-icon=\\"error\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                  <path d=\\"M7.99-.01c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13h-2v-2h2v2zm0-3h-2v-7h2v7z\\" fillRule=\\"evenodd\\" />
                                                                </svg>
                                                              </span>
                                                            </Blueprint4.Icon>
                                                            Please 
                                                            <NavLink to=\\"/login\\">
                                                              <Link aria-current={[undefined]} className=\\"\\" style={[undefined]} to=\\"/login\\">
                                                                <a aria-current={[undefined]} className=\\"\\" style={[undefined]} href=\\"/login\\" onClick={[Function: handleClick]} target={[undefined]}>
                                                                  log in
                                                                </a>
                                                              </Link>
                                                            </NavLink>
                                                             to execute on a remote device.
                                                          </div>
                                                        </Blueprint4.Callout>
                                                      </SideContentRemoteExecution>
                                                    </div>
                                                  </div>
                                                </div>
                                              </Blueprint4.Tabs>
                                            </div>
                                          </div>
                                        </Blueprint4.Card>
                                      </div>
                                    </GenericSideContent>
                                  </SideContent>
                                  <div className=\\"side-content-divider\\" />
                                  <div className={[undefined]} style={[undefined]}>
                                    <Resizer direction=\\"bottom\\" onResizeStart={[Function: bound ]} replaceStyles={[undefined]} className={[undefined]}>
                                      <div className=\\"\\" style={{...}} onMouseDown={[Function (anonymous)]} onTouchStart={[Function (anonymous)]} />
                                    </Resizer>
                                  </div>
                                </div>
                              </Resizable>
                              <Repl output={{...}} replValue=\\"\\" handleReplEval={[Function: handleReplEval]} usingSubst={false} handleBrowseHistoryDown={[Function (anonymous)]} handleBrowseHistoryUp={[Function (anonymous)]} handleReplValueChange={[Function (anonymous)]} sourceChapter={2} sourceVariant=\\"default\\" externalLibrary=\\"NONE\\" hidden={false} inputHidden={false} replButtons={{...}} disableScrolling={[undefined]}>
                                <div className=\\"Repl\\" style={{...}}>
                                  <div className=\\"repl-output-parent\\">
                                    <HotKeysEnabled className=\\"repl-input-parent row bp4-card bp4-elevation-0\\" handlers={{...}}>
                                      <HotKeysWrapper hotKeys={{...}} className=\\"repl-input-parent row bp4-card bp4-elevation-0\\">
                                        <div onFocus={[Function: bound _handleFocus]} onBlur={[Function: bound _handleBlur]} tabIndex=\\"-1\\" className=\\"repl-input-parent row bp4-card bp4-elevation-0\\">
                                          <ReplInput output={{...}} replValue=\\"\\" handleReplEval={[Function: handleReplEval]} usingSubst={false} handleBrowseHistoryDown={[Function (anonymous)]} handleBrowseHistoryUp={[Function (anonymous)]} handleReplValueChange={[Function (anonymous)]} sourceChapter={2} sourceVariant=\\"default\\" externalLibrary=\\"NONE\\" hidden={false} inputHidden={false} replButtons={{...}} disableScrolling={[undefined]}>
                                            <ReactAce className=\\"repl-react-ace react-ace\\" mode=\\"source2defaultNONE\\" theme=\\"source\\" height=\\"1px\\" width=\\"100%\\" value=\\"\\" onChange={[Function (anonymous)]} commands={{...}} minLines={1} maxLines={20} fontSize={17} highlightActiveLine={false} showGutter={false} showPrintMargin={false} setOptions={{...}} name=\\"ace-editor\\" focus={false} enableSnippets={false} onPaste={{...}} onLoad={{...}} onScroll={{...}} readOnly={false} tabSize={4} cursorStart={1} editorProps={{...}} style={{...}} scrollMargin={{...}} wrapEnabled={false} enableBasicAutocompletion={false} enableLiveAutocompletion={false} placeholder={{...}} navigateToFileEnd={true}>
                                              <div id=\\"ace-editor\\" style={{...}} />
                                            </ReactAce>
                                            <div className=\\"bp4-button-group bp4-dark\\">
                                              <ControlBarEvalButton handleReplEval={[Function: handleReplEval]} isRunning={false}>
                                                <Blueprint4.Tooltip2 content=\\"...or press shift-enter in the REPL\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
                                                  <Tooltip2Provider>
                                                    <Blueprint4.Popover2 modifiers={{...}} content=\\"...or press shift-enter in the REPL\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                                                      <Manager>
                                                        <Reference>
                                                          <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                                                            <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                                                              <ControlButton label=\\"Eval\\" icon=\\"code\\" onClick={[Function: handleReplEval]} className=\\"\\" disabled={[undefined]} tabIndex={0}>
                                                                <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[Function: handleReplEval]} icon={{...}} rightIcon={false}>
                                                                  <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: handleReplEval]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                                    <Blueprint4.Icon icon={{...}}>
                                                                      <Blueprint4.Icon icon=\\"code\\" color={[undefined]}>
                                                                        <span aria-hidden={true} icon=\\"code\\" className=\\"bp4-icon bp4-icon-code\\" title={[undefined]}>
                                                                          <svg fill={[undefined]} data-icon=\\"code\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                                            <path d=\\"M15.71 7.29l-3-3a1.003 1.003 0 00-1.42 1.42L13.59 8l-2.29 2.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3-3c.18-.18.29-.43.29-.71 0-.28-.11-.53-.29-.71zM5 5a1.003 1.003 0 00-1.71-.71l-3 3C.11 7.47 0 7.72 0 8c0 .28.11.53.29.71l3 3a1.003 1.003 0 001.42-1.42L2.41 8 4.7 5.71c.19-.18.3-.43.3-.71zm4-3c-.48 0-.87.35-.96.81l-2 10c-.01.06-.04.12-.04.19 0 .55.45 1 1 1 .48 0 .87-.35.96-.81l2-10c.01-.06.04-.12.04-.19 0-.55-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                                                                          </svg>
                                                                        </span>
                                                                      </Blueprint4.Icon>
                                                                    </Blueprint4.Icon>
                                                                    <span className=\\"bp4-button-text\\">
                                                                      Eval
                                                                    </span>
                                                                    <Blueprint4.Icon icon={false} />
                                                                  </button>
                                                                </Blueprint4.Button>
                                                              </ControlButton>
                                                            </span>
                                                          </Blueprint4.ResizeSensor2>
                                                        </Reference>
                                                        <Popper innerRef={[Function (anonymous)]} placement=\\"auto\\" strategy=\\"absolute\\" modifiers={{...}}>
                                                          <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                                                        </Popper>
                                                      </Manager>
                                                    </Blueprint4.Popover2>
                                                  </Tooltip2Provider>
                                                </Blueprint4.Tooltip2>
                                              </ControlBarEvalButton>
                                              <ControlBarClearButton handleReplOutputClear={[Function: handleReplOutputClear]}>
                                                <ControlButton label=\\"Clear\\" icon=\\"remove\\" onClick={[Function: handleReplOutputClear]}>
                                                  <Blueprint4.Button disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"\\" type={[undefined]} onClick={[Function: handleReplOutputClear]} icon={{...}} rightIcon={false}>
                                                    <button type={[undefined]} disabled={false} className=\\"bp4-button bp4-minimal\\" onClick={[Function: handleReplOutputClear]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                                      <Blueprint4.Icon icon={{...}}>
                                                        <Blueprint4.Icon icon=\\"remove\\" color={[undefined]}>
                                                          <span aria-hidden={true} icon=\\"remove\\" className=\\"bp4-icon bp4-icon-remove\\" title={[undefined]}>
                                                            <svg fill={[undefined]} data-icon=\\"remove\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                              <path d=\\"M10.99 6.99h-6c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z\\" fillRule=\\"evenodd\\" />
                                                            </svg>
                                                          </span>
                                                        </Blueprint4.Icon>
                                                      </Blueprint4.Icon>
                                                      <span className=\\"bp4-button-text\\">
                                                        Clear
                                                      </span>
                                                      <Blueprint4.Icon icon={false} />
                                                    </button>
                                                  </Blueprint4.Button>
                                                </ControlButton>
                                              </ControlBarClearButton>
                                            </div>
                                            <MediaQuery minWidth={769} />
                                          </ReplInput>
                                        </div>
                                      </HotKeysWrapper>
                                    </HotKeysEnabled>
                                  </div>
                                </div>
                              </Repl>
                            </div>
                          </div>
                        </div>
                      </div>
                    </Workspace>
                  </div>
                </HotKeysWrapper>
              </HotKeysEnabled>
            </Playground>
          </Provider>
        </RenderedRoute>
      </RenderErrorBoundary>
    </DataRoutes>
  </Router>
</RouterProvider>"
`;
