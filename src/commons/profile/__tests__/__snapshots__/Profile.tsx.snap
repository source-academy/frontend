// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile renders correctly when there are closed and graded, or closed and not manually graded assessments 1`] = `
"<Provider store={{...}}>
  <MemoryRouter initialEntries={{...}}>
    <Router history={{...}}>
      <Profile isOpen={true} onClose={[Function: onClose]}>
        <Blueprint4.Drawer className=\\"profile\\" icon=\\"user\\" isCloseButtonShown={true} isOpen={true} onClose={[Function: onClose]} title=\\"User Profile\\" position=\\"left\\" size=\\"360px\\" canOutsideClickClose={true} style={{...}}>
          <Blueprint4.Overlay className=\\"bp4-overlay-container\\" icon=\\"user\\" isCloseButtonShown={true} isOpen={true} onClose={[Function: onClose]} title=\\"User Profile\\" position=\\"left\\" size=\\"360px\\" canOutsideClickClose={true} style={{...}} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} hasBackdrop={true} lazy={true} shouldReturnFocusOnClose={true} transitionDuration={300} transitionName=\\"bp4-overlay\\" usePortal={true}>
            <Blueprint4.Portal className={[undefined]} container={{...}}>
              <Portal containerInfo={{...}}>
                <TransitionGroup appear={true} aria-live=\\"polite\\" className=\\"bp4-overlay bp4-overlay-open bp4-overlay-container\\" component=\\"div\\" onKeyDown={[Function (anonymous)]} childFactory={[Function: childFactory]}>
                  <div aria-live=\\"polite\\" className=\\"bp4-overlay bp4-overlay-open bp4-overlay-container\\" onKeyDown={[Function (anonymous)]}>
                    <CSSTransition classNames=\\"bp4-overlay\\" addEndListener={[Function (anonymous)]} timeout={300} unmountOnExit={true} onExited={[Function: bound bound handleExited]} in={true} exit={[undefined]} enter={[undefined]}>
                      <Transition addEndListener={[Function (anonymous)]} timeout={300} unmountOnExit={true} onExited={[Function (anonymous)]} in={true} exit={true} enter={true} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} mountOnEnter={false} appear={false}>
                        <div tabIndex={0} className=\\"bp4-overlay-start-focus-trap\\" onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} />
                      </Transition>
                    </CSSTransition>
                    <CSSTransition classNames=\\"bp4-overlay\\" timeout={300} addEndListener={[Function (anonymous)]} onExited={[Function: bound bound handleExited]} in={true} exit={[undefined]} enter={[undefined]}>
                      <Transition timeout={300} addEndListener={[Function (anonymous)]} onExited={[Function (anonymous)]} in={true} exit={true} enter={true} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} mountOnEnter={false} unmountOnExit={false} appear={false}>
                        <div className=\\"bp4-overlay-backdrop\\" onMouseDown={[Function (anonymous)]} />
                      </Transition>
                    </CSSTransition>
                    <CSSTransition classNames=\\"bp4-overlay\\" onEntering={[undefined]} onEntered={[undefined]} onExiting={[undefined]} onExited={[Function: bound bound handleExited]} timeout={300} addEndListener={[Function (anonymous)]} in={true} exit={[undefined]} enter={[undefined]}>
                      <Transition onEntering={[Function (anonymous)]} onEntered={[Function (anonymous)]} onExiting={[Function (anonymous)]} onExited={[Function (anonymous)]} timeout={300} addEndListener={[Function (anonymous)]} in={true} exit={true} enter={true} onEnter={[Function (anonymous)]} onExit={[Function (anonymous)]} mountOnEnter={false} unmountOnExit={false} appear={false}>
                        <div className=\\"bp4-drawer bp4-position-left profile bp4-overlay-content\\" style={{...}}>
                          <div className=\\"bp4-drawer-header\\">
                            <Blueprint4.Icon icon=\\"user\\" size={20}>
                              <span aria-hidden={true} icon=\\"user\\" className=\\"bp4-icon bp4-icon-user\\" title={[undefined]}>
                                <svg fill={[undefined]} data-icon=\\"user\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                  <path d=\\"M10 0C4.48 0 0 4.48 0 10c0 .33.02.65.05.97.01.12.03.23.05.35.03.2.05.4.09.59.03.14.06.28.1.42l.12.48c.05.16.1.31.15.46.05.13.09.27.15.4.06.16.13.32.21.48.05.11.1.22.16.33.09.17.17.34.27.5.05.09.1.17.15.25.11.18.22.35.34.52.04.06.08.11.12.17 1.19 1.62 2.85 2.86 4.78 3.53l.09.03c.46.15.93.27 1.42.36.08.01.17.03.25.04.49.07.99.12 1.5.12s1.01-.05 1.5-.12c.08-.01.17-.02.25-.04.49-.09.96-.21 1.42-.36l.09-.03c1.93-.67 3.59-1.91 4.78-3.53.04-.05.08-.1.12-.16.12-.17.23-.35.34-.53.05-.08.1-.16.15-.25.1-.17.19-.34.27-.51.05-.11.1-.21.15-.32.07-.16.14-.32.21-.49.05-.13.1-.26.14-.39.05-.15.11-.31.15-.46.05-.16.08-.32.12-.48.03-.14.07-.28.1-.42.04-.19.06-.39.09-.59.02-.12.04-.23.05-.35.05-.32.07-.64.07-.97 0-5.52-4.48-10-10-10zm0 18a7.94 7.94 0 01-6.15-2.89c.84-.44 1.86-.82 2.67-1.19 1.45-.65 1.3-1.05 1.35-1.59.01-.07.01-.14.01-.21-.51-.45-.93-1.08-1.2-1.8l-.01-.01c0-.01-.01-.02-.01-.03a4.42 4.42 0 01-.15-.48c-.33-.07-.53-.44-.61-.79-.08-.14-.23-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.63.06-1.55.17-2.15.02-.17.06-.33.11-.5.21-.73.66-1.4 1.26-1.86.62-.47 1.5-.72 2.28-.72.78 0 1.65.25 2.27.73.6.46 1.05 1.12 1.26 1.86.05.16.08.33.11.5.11.6.17 1.51.17 2.15v.09c.22.1.42.33.46.82.04.39-.12.73-.2.87-.07.34-.27.71-.6.78-.04.16-.09.33-.15.48 0 .01-.02.05-.02.05-.26.71-.67 1.33-1.17 1.78 0 .08.01.16.01.23.05.54-.15.94 1.31 1.59.81.36 1.84.74 2.68 1.19A7.958 7.958 0 0110 18z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint4.Icon>
                            <Component>
                              <h4 className=\\"bp4-heading\\">
                                User Profile
                              </h4>
                            </Component>
                            <Blueprint4.Button aria-label=\\"Close\\" className=\\"bp4-dialog-close-button\\" icon={{...}} minimal={true} onClick={[Function: onClose]}>
                              <button type=\\"button\\" aria-label=\\"Close\\" className=\\"bp4-button bp4-minimal bp4-dialog-close-button\\" onClick={[Function: onClose]} disabled={false} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                <Blueprint4.Icon icon={{...}}>
                                  <Blueprint4.Icon icon=\\"small-cross\\" size={20}>
                                    <span aria-hidden={true} icon=\\"small-cross\\" className=\\"bp4-icon bp4-icon-small-cross\\" title={[undefined]}>
                                      <svg fill={[undefined]} data-icon=\\"small-cross\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                        <path d=\\"M11.41 10l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z\\" fillRule=\\"evenodd\\" />
                                      </svg>
                                    </span>
                                  </Blueprint4.Icon>
                                </Blueprint4.Icon>
                                <Blueprint4.Icon icon={[undefined]} />
                              </button>
                            </Blueprint4.Button>
                          </div>
                          <div className=\\"profile-content\\">
                            <div className=\\"profile-header\\">
                              <div className=\\"profile-username\\">
                                <div className=\\"name\\">
                                  yeeet
                                </div>
                                <div className=\\"role\\">
                                  staff
                                </div>
                              </div>
                            </div>
                            <div className=\\"profile-progress\\">
                              <div className=\\"profile-xp\\">
                                <Blueprint4.Spinner className=\\"profile-spinner progress-skyblue\\" size={144} value={0}>
                                  <div aria-valuemax={100} aria-valuemin={0} aria-valuenow={0} className=\\"bp4-spinner bp4-no-spin profile-spinner progress-skyblue\\" role=\\"progressbar\\" size={144}>
                                    <div className=\\"bp4-spinner-animation\\">
                                      <svg width={144} height={144} strokeWidth=\\"2.78\\" viewBox=\\"3.61 3.61 92.78 92.78\\">
                                        <path className=\\"bp4-spinner-track\\" d=\\"M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90\\" />
                                        <path className=\\"bp4-spinner-head\\" d=\\"M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90\\" pathLength={280} strokeDasharray=\\"280 280\\" strokeDashoffset={280} />
                                      </svg>
                                    </div>
                                  </div>
                                </Blueprint4.Spinner>
                                <div className=\\"type\\">
                                  XP Progress
                                </div>
                                <div className=\\"total-value\\">
                                  0
                                   / 
                                  24000
                                  *
                                </div>
                                <div className=\\"percentage\\">
                                  0.00
                                  %
                                </div>
                              </div>
                            </div>
                            <div className=\\"profile-xp-footer\\">
                              *
                              24000
                              XP needed to reach full CA level of 
                              24
                            </div>
                            <div className=\\"profile-callouts\\">
                              <ProfileCard item={{...}} getFrac={[Function: getFrac]} parseColour={[Function: parseColour]} renderIcon={[Function: renderIcon]} courseId={1}>
                                <NavLink className=\\"profile-summary-navlink\\" target=\\"_blank\\" to=\\"/courses/1/quests/5/0\\" activeClassName=\\"profile-summary-navlink\\">
                                  <Link aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} to={{...}} target=\\"_blank\\">
                                    <LinkAnchor aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/courses/1/quests/5/0\\" navigate={[Function: navigate]}>
                                      <a aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/courses/1/quests/5/0\\" onClick={[Function: onClick]}>
                                        <Blueprint4.Callout className=\\"profile-summary-callout\\" icon=\\"lightbulb\\" title=\\"Closed (fully graded) Sidequest\\">
                                          <div className=\\"bp4-callout bp4-callout-icon profile-summary-callout\\">
                                            <Blueprint4.Icon icon=\\"lightbulb\\" aria-hidden={true} tabIndex={-1}>
                                              <span aria-hidden={true} icon=\\"lightbulb\\" tabIndex={-1} className=\\"bp4-icon bp4-icon-lightbulb\\" title={[undefined]}>
                                                <svg fill={[undefined]} data-icon=\\"lightbulb\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                  <path d=\\"M9.01 14h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.44-1-1-1zm1-3h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.44-1-1-1zm-2-11C5.26 0 3.03 1.95 3.03 4.35c0 2.37 1.63 2.64 1.94 5.22 0 .24.22.44.5.44h5.09c.28 0 .5-.19.5-.44C11.37 6.99 13 6.72 13 4.35 13 1.95 10.77 0 8.01 0z\\" fillRule=\\"evenodd\\" />
                                                </svg>
                                              </span>
                                            </Blueprint4.Icon>
                                            <Component>
                                              <h5 className=\\"bp4-heading\\">
                                                Closed (fully graded) Sidequest
                                              </h5>
                                            </Component>
                                            <div className=\\"xp-details\\">
                                              <div className=\\"title\\">
                                                XP
                                              </div>
                                              <div className=\\"value\\">
                                                150
                                                 / 
                                                500
                                              </div>
                                              <Blueprint4.ProgressBar animate={false} className=\\"value-bar progress-skyblue\\" stripes={false} value={0.3}>
                                                <div aria-valuemax={100} aria-valuemin={0} aria-valuenow={30} className=\\"bp4-progress-bar bp4-no-animation bp4-no-stripes value-bar progress-skyblue\\" role=\\"progressbar\\">
                                                  <div className=\\"bp4-progress-meter\\" style={{...}} />
                                                </div>
                                              </Blueprint4.ProgressBar>
                                            </div>
                                          </div>
                                        </Blueprint4.Callout>
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                </NavLink>
                              </ProfileCard>
                              <ProfileCard item={{...}} getFrac={[Function: getFrac]} parseColour={[Function: parseColour]} renderIcon={[Function: renderIcon]} courseId={1}>
                                <NavLink className=\\"profile-summary-navlink\\" target=\\"_blank\\" to=\\"/courses/1/quests/5/0\\" activeClassName=\\"profile-summary-navlink\\">
                                  <Link aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} to={{...}} target=\\"_blank\\">
                                    <LinkAnchor aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/courses/1/quests/5/0\\" navigate={[Function: navigate]}>
                                      <a aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/courses/1/quests/5/0\\" onClick={[Function: onClick]}>
                                        <Blueprint4.Callout className=\\"profile-summary-callout\\" icon=\\"lightbulb\\" title=\\"Ungraded assessment\\">
                                          <div className=\\"bp4-callout bp4-callout-icon profile-summary-callout\\">
                                            <Blueprint4.Icon icon=\\"lightbulb\\" aria-hidden={true} tabIndex={-1}>
                                              <span aria-hidden={true} icon=\\"lightbulb\\" tabIndex={-1} className=\\"bp4-icon bp4-icon-lightbulb\\" title={[undefined]}>
                                                <svg fill={[undefined]} data-icon=\\"lightbulb\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                                                  <path d=\\"M9.01 14h-2c-.55 0-1 .45-1 1s.45 1 1 1h2c.55 0 1-.45 1-1s-.44-1-1-1zm1-3h-4c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.44-1-1-1zm-2-11C5.26 0 3.03 1.95 3.03 4.35c0 2.37 1.63 2.64 1.94 5.22 0 .24.22.44.5.44h5.09c.28 0 .5-.19.5-.44C11.37 6.99 13 6.72 13 4.35 13 1.95 10.77 0 8.01 0z\\" fillRule=\\"evenodd\\" />
                                                </svg>
                                              </span>
                                            </Blueprint4.Icon>
                                            <Component>
                                              <h5 className=\\"bp4-heading\\">
                                                Ungraded assessment
                                              </h5>
                                            </Component>
                                            <div className=\\"xp-details\\">
                                              <div className=\\"title\\">
                                                XP
                                              </div>
                                              <div className=\\"value\\">
                                                100
                                                 / 
                                                0
                                              </div>
                                              <Blueprint4.ProgressBar animate={false} className=\\"value-bar progress-steelblue\\" stripes={false} value={1}>
                                                <div aria-valuemax={100} aria-valuemin={0} aria-valuenow={100} className=\\"bp4-progress-bar bp4-no-animation bp4-no-stripes value-bar progress-steelblue\\" role=\\"progressbar\\">
                                                  <div className=\\"bp4-progress-meter\\" style={{...}} />
                                                </div>
                                              </Blueprint4.ProgressBar>
                                            </div>
                                          </div>
                                        </Blueprint4.Callout>
                                      </a>
                                    </LinkAnchor>
                                  </Link>
                                </NavLink>
                              </ProfileCard>
                            </div>
                          </div>
                        </div>
                      </Transition>
                    </CSSTransition>
                    <CSSTransition classNames=\\"bp4-overlay\\" addEndListener={[Function (anonymous)]} timeout={300} unmountOnExit={true} onExited={[Function: bound bound handleExited]} in={true} exit={[undefined]} enter={[undefined]}>
                      <Transition addEndListener={[Function (anonymous)]} timeout={300} unmountOnExit={true} onExited={[Function (anonymous)]} in={true} exit={true} enter={true} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} mountOnEnter={false} appear={false}>
                        <div tabIndex={0} className=\\"bp4-overlay-end-focus-trap\\" onFocus={[Function (anonymous)]} />
                      </Transition>
                    </CSSTransition>
                  </div>
                </TransitionGroup>
              </Portal>
            </Blueprint4.Portal>
          </Blueprint4.Overlay>
        </Blueprint4.Drawer>
      </Profile>
    </Router>
  </MemoryRouter>
</Provider>"
`;

exports[`Profile renders correctly when there are no closed assessments 1`] = `
"<Provider store={{...}}>
  <MemoryRouter initialEntries={{...}}>
    <Router history={{...}}>
      <Profile isOpen={true} onClose={[Function: onClose]}>
        <Blueprint4.Drawer className=\\"profile\\" icon=\\"user\\" isCloseButtonShown={true} isOpen={true} onClose={[Function: onClose]} title=\\"User Profile\\" position=\\"left\\" size=\\"360px\\" canOutsideClickClose={true} style={{...}}>
          <Blueprint4.Overlay className=\\"bp4-overlay-container\\" icon=\\"user\\" isCloseButtonShown={true} isOpen={true} onClose={[Function: onClose]} title=\\"User Profile\\" position=\\"left\\" size=\\"360px\\" canOutsideClickClose={true} style={{...}} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} hasBackdrop={true} lazy={true} shouldReturnFocusOnClose={true} transitionDuration={300} transitionName=\\"bp4-overlay\\" usePortal={true}>
            <Blueprint4.Portal className={[undefined]} container={{...}}>
              <Portal containerInfo={{...}}>
                <TransitionGroup appear={true} aria-live=\\"polite\\" className=\\"bp4-overlay bp4-overlay-open bp4-overlay-container\\" component=\\"div\\" onKeyDown={[Function (anonymous)]} childFactory={[Function: childFactory]}>
                  <div aria-live=\\"polite\\" className=\\"bp4-overlay bp4-overlay-open bp4-overlay-container\\" onKeyDown={[Function (anonymous)]}>
                    <CSSTransition classNames=\\"bp4-overlay\\" addEndListener={[Function (anonymous)]} timeout={300} unmountOnExit={true} onExited={[Function: bound bound handleExited]} in={true} exit={[undefined]} enter={[undefined]}>
                      <Transition addEndListener={[Function (anonymous)]} timeout={300} unmountOnExit={true} onExited={[Function (anonymous)]} in={true} exit={true} enter={true} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} mountOnEnter={false} appear={false}>
                        <div tabIndex={0} className=\\"bp4-overlay-start-focus-trap\\" onFocus={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} />
                      </Transition>
                    </CSSTransition>
                    <CSSTransition classNames=\\"bp4-overlay\\" timeout={300} addEndListener={[Function (anonymous)]} onExited={[Function: bound bound handleExited]} in={true} exit={[undefined]} enter={[undefined]}>
                      <Transition timeout={300} addEndListener={[Function (anonymous)]} onExited={[Function (anonymous)]} in={true} exit={true} enter={true} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} mountOnEnter={false} unmountOnExit={false} appear={false}>
                        <div className=\\"bp4-overlay-backdrop\\" onMouseDown={[Function (anonymous)]} />
                      </Transition>
                    </CSSTransition>
                    <CSSTransition classNames=\\"bp4-overlay\\" onEntering={[undefined]} onEntered={[undefined]} onExiting={[undefined]} onExited={[Function: bound bound handleExited]} timeout={300} addEndListener={[Function (anonymous)]} in={true} exit={[undefined]} enter={[undefined]}>
                      <Transition onEntering={[Function (anonymous)]} onEntered={[Function (anonymous)]} onExiting={[Function (anonymous)]} onExited={[Function (anonymous)]} timeout={300} addEndListener={[Function (anonymous)]} in={true} exit={true} enter={true} onEnter={[Function (anonymous)]} onExit={[Function (anonymous)]} mountOnEnter={false} unmountOnExit={false} appear={false}>
                        <div className=\\"bp4-drawer bp4-position-left profile bp4-overlay-content\\" style={{...}}>
                          <div className=\\"bp4-drawer-header\\">
                            <Blueprint4.Icon icon=\\"user\\" size={20}>
                              <span aria-hidden={true} icon=\\"user\\" className=\\"bp4-icon bp4-icon-user\\" title={[undefined]}>
                                <svg fill={[undefined]} data-icon=\\"user\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                  <path d=\\"M10 0C4.48 0 0 4.48 0 10c0 .33.02.65.05.97.01.12.03.23.05.35.03.2.05.4.09.59.03.14.06.28.1.42l.12.48c.05.16.1.31.15.46.05.13.09.27.15.4.06.16.13.32.21.48.05.11.1.22.16.33.09.17.17.34.27.5.05.09.1.17.15.25.11.18.22.35.34.52.04.06.08.11.12.17 1.19 1.62 2.85 2.86 4.78 3.53l.09.03c.46.15.93.27 1.42.36.08.01.17.03.25.04.49.07.99.12 1.5.12s1.01-.05 1.5-.12c.08-.01.17-.02.25-.04.49-.09.96-.21 1.42-.36l.09-.03c1.93-.67 3.59-1.91 4.78-3.53.04-.05.08-.1.12-.16.12-.17.23-.35.34-.53.05-.08.1-.16.15-.25.1-.17.19-.34.27-.51.05-.11.1-.21.15-.32.07-.16.14-.32.21-.49.05-.13.1-.26.14-.39.05-.15.11-.31.15-.46.05-.16.08-.32.12-.48.03-.14.07-.28.1-.42.04-.19.06-.39.09-.59.02-.12.04-.23.05-.35.05-.32.07-.64.07-.97 0-5.52-4.48-10-10-10zm0 18a7.94 7.94 0 01-6.15-2.89c.84-.44 1.86-.82 2.67-1.19 1.45-.65 1.3-1.05 1.35-1.59.01-.07.01-.14.01-.21-.51-.45-.93-1.08-1.2-1.8l-.01-.01c0-.01-.01-.02-.01-.03a4.42 4.42 0 01-.15-.48c-.33-.07-.53-.44-.61-.79-.08-.14-.23-.48-.2-.87.05-.51.26-.74.49-.83v-.08c0-.63.06-1.55.17-2.15.02-.17.06-.33.11-.5.21-.73.66-1.4 1.26-1.86.62-.47 1.5-.72 2.28-.72.78 0 1.65.25 2.27.73.6.46 1.05 1.12 1.26 1.86.05.16.08.33.11.5.11.6.17 1.51.17 2.15v.09c.22.1.42.33.46.82.04.39-.12.73-.2.87-.07.34-.27.71-.6.78-.04.16-.09.33-.15.48 0 .01-.02.05-.02.05-.26.71-.67 1.33-1.17 1.78 0 .08.01.16.01.23.05.54-.15.94 1.31 1.59.81.36 1.84.74 2.68 1.19A7.958 7.958 0 0110 18z\\" fillRule=\\"evenodd\\" />
                                </svg>
                              </span>
                            </Blueprint4.Icon>
                            <Component>
                              <h4 className=\\"bp4-heading\\">
                                User Profile
                              </h4>
                            </Component>
                            <Blueprint4.Button aria-label=\\"Close\\" className=\\"bp4-dialog-close-button\\" icon={{...}} minimal={true} onClick={[Function: onClose]}>
                              <button type=\\"button\\" aria-label=\\"Close\\" className=\\"bp4-button bp4-minimal bp4-dialog-close-button\\" onClick={[Function: onClose]} disabled={false} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                                <Blueprint4.Icon icon={{...}}>
                                  <Blueprint4.Icon icon=\\"small-cross\\" size={20}>
                                    <span aria-hidden={true} icon=\\"small-cross\\" className=\\"bp4-icon bp4-icon-small-cross\\" title={[undefined]}>
                                      <svg fill={[undefined]} data-icon=\\"small-cross\\" width={20} height={20} viewBox=\\"0 0 20 20\\" aria-labelledby={[undefined]} role=\\"img\\">
                                        <path d=\\"M11.41 10l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z\\" fillRule=\\"evenodd\\" />
                                      </svg>
                                    </span>
                                  </Blueprint4.Icon>
                                </Blueprint4.Icon>
                                <Blueprint4.Icon icon={[undefined]} />
                              </button>
                            </Blueprint4.Button>
                          </div>
                          <div className=\\"profile-content\\">
                            <div className=\\"profile-header\\">
                              <div className=\\"profile-username\\">
                                <div className=\\"name\\">
                                  yeet
                                </div>
                                <div className=\\"role\\">
                                  student
                                </div>
                              </div>
                            </div>
                            <div className=\\"profile-placeholder\\">
                              There are no closed assessments to render grade and XP of.
                            </div>
                          </div>
                        </div>
                      </Transition>
                    </CSSTransition>
                    <CSSTransition classNames=\\"bp4-overlay\\" addEndListener={[Function (anonymous)]} timeout={300} unmountOnExit={true} onExited={[Function: bound bound handleExited]} in={true} exit={[undefined]} enter={[undefined]}>
                      <Transition addEndListener={[Function (anonymous)]} timeout={300} unmountOnExit={true} onExited={[Function (anonymous)]} in={true} exit={true} enter={true} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} mountOnEnter={false} appear={false}>
                        <div tabIndex={0} className=\\"bp4-overlay-end-focus-trap\\" onFocus={[Function (anonymous)]} />
                      </Transition>
                    </CSSTransition>
                  </div>
                </TransitionGroup>
              </Portal>
            </Blueprint4.Portal>
          </Blueprint4.Overlay>
        </Blueprint4.Drawer>
      </Profile>
    </Router>
  </MemoryRouter>
</Provider>"
`;
