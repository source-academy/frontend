// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Autograder renders autograder results with different statuses correctly 1`] = `
"<SideContentAutograder autogradingResults={{...}} testcases={{...}} workspaceLocation=\\"assessment\\" handleTestcaseEval={[Function: handleTestcaseEval]}>
  <div className=\\"Autograder\\">
    <Blueprint4.Button className=\\"collapse-button\\" icon=\\"caret-down\\" minimal={true} onClick={[Function (anonymous)]}>
      <button type=\\"button\\" className=\\"bp4-button bp4-minimal collapse-button\\" onClick={[Function (anonymous)]} disabled={false} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
        <Blueprint4.Icon icon=\\"caret-down\\">
          <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
            <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
              <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
            </svg>
          </span>
        </Blueprint4.Icon>
        <span className=\\"bp4-button-text\\">
          <span>
            Testcases
          </span>
          <Blueprint4.Tooltip2 content={{...}} placement=\\"left\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
            <Tooltip2Provider>
              <Blueprint4.Popover2 modifiers={{...}} content={{...}} placement=\\"left\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                <Manager>
                  <Reference>
                    <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                      <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                        <Blueprint4.Icon icon=\\"help\\" className=\\"\\" disabled={[undefined]} tabIndex={0}>
                          <span aria-hidden={true} icon=\\"help\\" disabled={[undefined]} tabIndex={0} className=\\"bp4-icon bp4-icon-help\\" title={[undefined]}>
                            <svg fill={[undefined]} data-icon=\\"help\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                              <path d=\\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z\\" fillRule=\\"evenodd\\" />
                            </svg>
                          </span>
                        </Blueprint4.Icon>
                      </span>
                    </Blueprint4.ResizeSensor2>
                  </Reference>
                  <Popper innerRef={[Function (anonymous)]} placement=\\"left\\" strategy=\\"absolute\\" modifiers={{...}}>
                    <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                  </Popper>
                </Manager>
              </Blueprint4.Popover2>
            </Tooltip2Provider>
          </Blueprint4.Tooltip2>
        </span>
        <Blueprint4.Icon icon={[undefined]} />
      </button>
    </Blueprint4.Button>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"noResults\\">
            There are no testcases provided for this question.
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
    <ControlButton label=\\"Autograder Results\\" icon=\\"caret-down\\" onClick={[Function (anonymous)]} options={{...}}>
      <Blueprint4.AnchorButton disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} icon={{...}} rightIcon={false}>
        <a role=\\"button\\" disabled={false} className=\\"bp4-button bp4-minimal collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={0} href={[undefined]}>
          <Blueprint4.Icon icon={{...}}>
            <Blueprint4.Icon icon=\\"caret-down\\" color={[undefined]}>
              <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                  <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                </svg>
              </span>
            </Blueprint4.Icon>
          </Blueprint4.Icon>
          <span className=\\"bp4-button-text\\">
            Autograder Results
          </span>
          <Blueprint4.Icon icon={false} />
        </a>
      </Blueprint4.AnchorButton>
    </ControlButton>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div>
            <div className=\\"results-header\\">
              <div className=\\"header-data\\">
                <div className=\\"header-sn\\">
                  S/N
                  <Blueprint4.Icon icon=\\"caret-down\\">
                    <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                      <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                        <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                      </svg>
                    </span>
                  </Blueprint4.Icon>
                </div>
                <div className=\\"header-status\\">
                  Testcase status
                  <Blueprint4.Icon icon=\\"caret-down\\">
                    <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                      <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                        <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                      </svg>
                    </span>
                  </Blueprint4.Icon>
                </div>
              </div>
              <div className=\\"header-expected\\">
                Expected result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-actual\\">
                Actual result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
            </div>
            <SideContentResultCard index={0} result={{...}}>
              <div className=\\"ResultCard correct\\">
                <Blueprint4.Card elevation={1} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1\\">
                    <div className=\\"result-data\\">
                      <div className=\\"result-idx\\">
                        1
                      </div>
                      <div className=\\"result-status\\">
                        PASS
                      </div>
                    </div>
                    <Component className=\\"result-expected\\">
                      <pre className=\\"bp4-code-block result-expected\\" />
                    </Component>
                    <Component className=\\"result-actual\\">
                      <pre className=\\"bp4-code-block result-actual\\" />
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentResultCard>
            <SideContentResultCard index={1} result={{...}}>
              <div className=\\"ResultCard wrong\\">
                <Blueprint4.Card elevation={1} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1\\">
                    <div className=\\"result-data\\">
                      <div className=\\"result-idx\\">
                        2
                      </div>
                      <div className=\\"result-status\\">
                        FAIL
                      </div>
                    </div>
                    <Component className=\\"result-expected\\">
                      <pre className=\\"bp4-code-block result-expected\\">
                        8
                      </pre>
                    </Component>
                    <Component className=\\"result-actual\\">
                      <pre className=\\"bp4-code-block result-actual\\">
                        5
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentResultCard>
            <SideContentResultCard index={2} result={{...}}>
              <div className=\\"ResultCard wrong\\">
                <Blueprint4.Card elevation={1} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1\\">
                    <div className=\\"result-data\\">
                      <div className=\\"result-idx\\">
                        3
                      </div>
                      <div className=\\"result-status\\">
                        ERROR
                      </div>
                    </div>
                    <Component className=\\"result-expected\\">
                      <pre className=\\"bp4-code-block result-expected\\" />
                    </Component>
                    <Component className=\\"result-actual\\">
                      <pre className=\\"bp4-code-block result-actual\\">
                        [UNKNOWN] Autograder error: type dummyErrorType
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentResultCard>
            <SideContentResultCard index={3} result={{...}}>
              <div className=\\"ResultCard wrong\\">
                <Blueprint4.Card elevation={1} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1\\">
                    <div className=\\"result-data\\">
                      <div className=\\"result-idx\\">
                        4
                      </div>
                      <div className=\\"result-status\\">
                        ERROR
                      </div>
                    </div>
                    <Component className=\\"result-expected\\">
                      <pre className=\\"bp4-code-block result-expected\\" />
                    </Component>
                    <Component className=\\"result-actual\\">
                      <pre className=\\"bp4-code-block result-actual\\">
                        [SYSTEM] Cannot read property &#39;getUniformLocation&#39; of null
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentResultCard>
            <SideContentResultCard index={4} result={{...}}>
              <div className=\\"ResultCard wrong\\">
                <Blueprint4.Card elevation={1} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1\\">
                    <div className=\\"result-data\\">
                      <div className=\\"result-idx\\">
                        5
                      </div>
                      <div className=\\"result-status\\">
                        ERROR
                      </div>
                    </div>
                    <Component className=\\"result-expected\\">
                      <pre className=\\"bp4-code-block result-expected\\" />
                    </Component>
                    <Component className=\\"result-actual\\">
                      <pre className=\\"bp4-code-block result-actual\\">
                        [TIMEOUT] Submission exceeded time limit for this test case.
                        
                        [SYNTAX] Line 2: Missing semicolon at the end of statement
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentResultCard>
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
  </div>
</SideContentAutograder>"
`;

exports[`Autograder renders opaque testcases with different statuses correctly in AssessmentWorkspace 1`] = `
"<SideContentAutograder autogradingResults={{...}} testcases={{...}} workspaceLocation=\\"assessment\\" handleTestcaseEval={[Function: handleTestcaseEval]}>
  <div className=\\"Autograder\\">
    <Blueprint4.Button className=\\"collapse-button\\" icon=\\"caret-down\\" minimal={true} onClick={[Function (anonymous)]}>
      <button type=\\"button\\" className=\\"bp4-button bp4-minimal collapse-button\\" onClick={[Function (anonymous)]} disabled={false} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
        <Blueprint4.Icon icon=\\"caret-down\\">
          <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
            <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
              <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
            </svg>
          </span>
        </Blueprint4.Icon>
        <span className=\\"bp4-button-text\\">
          <span>
            Testcases
          </span>
          <Blueprint4.Tooltip2 content={{...}} placement=\\"left\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
            <Tooltip2Provider>
              <Blueprint4.Popover2 modifiers={{...}} content={{...}} placement=\\"left\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                <Manager>
                  <Reference>
                    <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                      <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                        <Blueprint4.Icon icon=\\"help\\" className=\\"\\" disabled={[undefined]} tabIndex={0}>
                          <span aria-hidden={true} icon=\\"help\\" disabled={[undefined]} tabIndex={0} className=\\"bp4-icon bp4-icon-help\\" title={[undefined]}>
                            <svg fill={[undefined]} data-icon=\\"help\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                              <path d=\\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z\\" fillRule=\\"evenodd\\" />
                            </svg>
                          </span>
                        </Blueprint4.Icon>
                      </span>
                    </Blueprint4.ResizeSensor2>
                  </Reference>
                  <Popper innerRef={[Function (anonymous)]} placement=\\"left\\" strategy=\\"absolute\\" modifiers={{...}}>
                    <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                  </Popper>
                </Manager>
              </Blueprint4.Popover2>
            </Tooltip2Provider>
          </Blueprint4.Tooltip2>
        </span>
        <Blueprint4.Icon icon={[undefined]} />
      </button>
    </Blueprint4.Button>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"testcaseCards\\">
            <div className=\\"testcases-header\\">
              <div className=\\"header-fn\\">
                Testcase
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-expected\\">
                Expected result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-actual\\">
                Actual result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
            </div>
            <SideContentTestcaseCard index={0} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-placeholder\\">
                      <pre className=\\"bp4-code-block testcase-placeholder\\">
                        Hidden testcase
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={1} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard correct secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-placeholder\\">
                      <pre className=\\"bp4-code-block testcase-placeholder\\">
                        Hidden testcase
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={2} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard wrong secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-placeholder\\">
                      <pre className=\\"bp4-code-block testcase-placeholder\\">
                        Hidden testcase
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={3} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard wrong secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-placeholder\\">
                      <pre className=\\"bp4-code-block testcase-placeholder\\">
                        Hidden testcase
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
    <ControlButton label=\\"Autograder Results\\" icon=\\"caret-down\\" onClick={[Function (anonymous)]} options={{...}}>
      <Blueprint4.AnchorButton disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} icon={{...}} rightIcon={false}>
        <a role=\\"button\\" disabled={false} className=\\"bp4-button bp4-minimal collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={0} href={[undefined]}>
          <Blueprint4.Icon icon={{...}}>
            <Blueprint4.Icon icon=\\"caret-down\\" color={[undefined]}>
              <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                  <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                </svg>
              </span>
            </Blueprint4.Icon>
          </Blueprint4.Icon>
          <span className=\\"bp4-button-text\\">
            Autograder Results
          </span>
          <Blueprint4.Icon icon={false} />
        </a>
      </Blueprint4.AnchorButton>
    </ControlButton>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"noResults\\">
            There are no results to show.
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
  </div>
</SideContentAutograder>"
`;

exports[`Autograder renders opaque testcases with different statuses correctly in GradingWorkspace 1`] = `
"<SideContentAutograder autogradingResults={{...}} testcases={{...}} workspaceLocation=\\"grading\\" handleTestcaseEval={[Function: handleTestcaseEval]}>
  <div className=\\"Autograder\\">
    <Blueprint4.Button className=\\"collapse-button\\" icon=\\"caret-down\\" minimal={true} onClick={[Function (anonymous)]}>
      <button type=\\"button\\" className=\\"bp4-button bp4-minimal collapse-button\\" onClick={[Function (anonymous)]} disabled={false} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
        <Blueprint4.Icon icon=\\"caret-down\\">
          <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
            <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
              <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
            </svg>
          </span>
        </Blueprint4.Icon>
        <span className=\\"bp4-button-text\\">
          <span>
            Testcases
          </span>
          <Blueprint4.Tooltip2 content={{...}} placement=\\"left\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
            <Tooltip2Provider>
              <Blueprint4.Popover2 modifiers={{...}} content={{...}} placement=\\"left\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                <Manager>
                  <Reference>
                    <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                      <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                        <Blueprint4.Icon icon=\\"help\\" className=\\"\\" disabled={[undefined]} tabIndex={0}>
                          <span aria-hidden={true} icon=\\"help\\" disabled={[undefined]} tabIndex={0} className=\\"bp4-icon bp4-icon-help\\" title={[undefined]}>
                            <svg fill={[undefined]} data-icon=\\"help\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                              <path d=\\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z\\" fillRule=\\"evenodd\\" />
                            </svg>
                          </span>
                        </Blueprint4.Icon>
                      </span>
                    </Blueprint4.ResizeSensor2>
                  </Reference>
                  <Popper innerRef={[Function (anonymous)]} placement=\\"left\\" strategy=\\"absolute\\" modifiers={{...}}>
                    <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                  </Popper>
                </Manager>
              </Blueprint4.Popover2>
            </Tooltip2Provider>
          </Blueprint4.Tooltip2>
        </span>
        <Blueprint4.Icon icon={[undefined]} />
      </button>
    </Blueprint4.Button>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"testcaseCards\\">
            <div className=\\"testcases-header\\">
              <div className=\\"header-fn\\">
                Testcase
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-expected\\">
                Expected result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-actual\\">
                Actual result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
            </div>
            <SideContentTestcaseCard index={0} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        add(3, 0);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        3
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        No Answer
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={1} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard correct secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        add(5, 2);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        7
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        7
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={2} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard wrong secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        add(-6, 6);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        0
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        12
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={3} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard wrong secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        add(-4, -7);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        -11
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        Line 3: Name a not declared.
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
    <ControlButton label=\\"Autograder Results\\" icon=\\"caret-down\\" onClick={[Function (anonymous)]} options={{...}}>
      <Blueprint4.AnchorButton disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} icon={{...}} rightIcon={false}>
        <a role=\\"button\\" disabled={false} className=\\"bp4-button bp4-minimal collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={0} href={[undefined]}>
          <Blueprint4.Icon icon={{...}}>
            <Blueprint4.Icon icon=\\"caret-down\\" color={[undefined]}>
              <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                  <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                </svg>
              </span>
            </Blueprint4.Icon>
          </Blueprint4.Icon>
          <span className=\\"bp4-button-text\\">
            Autograder Results
          </span>
          <Blueprint4.Icon icon={false} />
        </a>
      </Blueprint4.AnchorButton>
    </ControlButton>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"noResults\\">
            There are no results to show.
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
  </div>
</SideContentAutograder>"
`;

exports[`Autograder renders placeholders correctly when testcases and results are empty 1`] = `
"<div className=\\"Autograder\\">
  <Blueprint4.Button className=\\"collapse-button\\" icon=\\"caret-down\\" minimal={true} onClick={[Function (anonymous)]}>
    <span>
      Testcases
    </span>
    <Blueprint4.Tooltip2 content={{...}} placement=\\"left\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
      <Blueprint4.Icon icon=\\"help\\" />
    </Blueprint4.Tooltip2>
  </Blueprint4.Button>
  <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
    <div className=\\"noResults\\">
      There are no testcases provided for this question.
    </div>
  </Blueprint4.Collapse>
  <ControlButton label=\\"Autograder Results\\" icon=\\"caret-down\\" onClick={[Function (anonymous)]} options={{...}} />
  <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
    <div className=\\"noResults\\">
      There are no results to show.
    </div>
  </Blueprint4.Collapse>
</div>"
`;

exports[`Autograder renders public testcases with different statuses correctly 1`] = `
"<SideContentAutograder autogradingResults={{...}} testcases={{...}} workspaceLocation=\\"assessment\\" handleTestcaseEval={[Function: handleTestcaseEval]}>
  <div className=\\"Autograder\\">
    <Blueprint4.Button className=\\"collapse-button\\" icon=\\"caret-down\\" minimal={true} onClick={[Function (anonymous)]}>
      <button type=\\"button\\" className=\\"bp4-button bp4-minimal collapse-button\\" onClick={[Function (anonymous)]} disabled={false} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
        <Blueprint4.Icon icon=\\"caret-down\\">
          <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
            <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
              <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
            </svg>
          </span>
        </Blueprint4.Icon>
        <span className=\\"bp4-button-text\\">
          <span>
            Testcases
          </span>
          <Blueprint4.Tooltip2 content={{...}} placement=\\"left\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
            <Tooltip2Provider>
              <Blueprint4.Popover2 modifiers={{...}} content={{...}} placement=\\"left\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                <Manager>
                  <Reference>
                    <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                      <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                        <Blueprint4.Icon icon=\\"help\\" className=\\"\\" disabled={[undefined]} tabIndex={0}>
                          <span aria-hidden={true} icon=\\"help\\" disabled={[undefined]} tabIndex={0} className=\\"bp4-icon bp4-icon-help\\" title={[undefined]}>
                            <svg fill={[undefined]} data-icon=\\"help\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                              <path d=\\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z\\" fillRule=\\"evenodd\\" />
                            </svg>
                          </span>
                        </Blueprint4.Icon>
                      </span>
                    </Blueprint4.ResizeSensor2>
                  </Reference>
                  <Popper innerRef={[Function (anonymous)]} placement=\\"left\\" strategy=\\"absolute\\" modifiers={{...}}>
                    <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                  </Popper>
                </Manager>
              </Blueprint4.Popover2>
            </Tooltip2Provider>
          </Blueprint4.Tooltip2>
        </span>
        <Blueprint4.Icon icon={[undefined]} />
      </button>
    </Blueprint4.Button>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"testcaseCards\\">
            <div className=\\"testcases-header\\">
              <div className=\\"header-fn\\">
                Testcase
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-expected\\">
                Expected result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-actual\\">
                Actual result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
            </div>
            <SideContentTestcaseCard index={0} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard correct\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        &quot;string&quot;;
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        &quot;string&quot;
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        &quot;string&quot;
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={1} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        fibonacci(2);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        2
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        No Answer
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={2} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard correct\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        fibonacci(3);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        2
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        2
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={3} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard wrong\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        fibonacci(4);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        3
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        4
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={4} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"assessment\\">
              <div className=\\"AutograderCard wrong\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        fibonacci(5);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        5
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        Line 3: Name a not declared.
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
    <ControlButton label=\\"Autograder Results\\" icon=\\"caret-down\\" onClick={[Function (anonymous)]} options={{...}}>
      <Blueprint4.AnchorButton disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} icon={{...}} rightIcon={false}>
        <a role=\\"button\\" disabled={false} className=\\"bp4-button bp4-minimal collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={0} href={[undefined]}>
          <Blueprint4.Icon icon={{...}}>
            <Blueprint4.Icon icon=\\"caret-down\\" color={[undefined]}>
              <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                  <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                </svg>
              </span>
            </Blueprint4.Icon>
          </Blueprint4.Icon>
          <span className=\\"bp4-button-text\\">
            Autograder Results
          </span>
          <Blueprint4.Icon icon={false} />
        </a>
      </Blueprint4.AnchorButton>
    </ControlButton>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"noResults\\">
            There are no results to show.
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
  </div>
</SideContentAutograder>"
`;

exports[`Autograder renders secret testcases with different statuses correctly 1`] = `
"<SideContentAutograder autogradingResults={{...}} testcases={{...}} workspaceLocation=\\"grading\\" handleTestcaseEval={[Function: handleTestcaseEval]}>
  <div className=\\"Autograder\\">
    <Blueprint4.Button className=\\"collapse-button\\" icon=\\"caret-down\\" minimal={true} onClick={[Function (anonymous)]}>
      <button type=\\"button\\" className=\\"bp4-button bp4-minimal collapse-button\\" onClick={[Function (anonymous)]} disabled={false} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
        <Blueprint4.Icon icon=\\"caret-down\\">
          <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
            <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
              <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
            </svg>
          </span>
        </Blueprint4.Icon>
        <span className=\\"bp4-button-text\\">
          <span>
            Testcases
          </span>
          <Blueprint4.Tooltip2 content={{...}} placement=\\"left\\" compact={false} hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100}>
            <Tooltip2Provider>
              <Blueprint4.Popover2 modifiers={{...}} content={{...}} placement=\\"left\\" hoverCloseDelay={0} hoverOpenDelay={100} interactionKind=\\"hover-target\\" minimal={false} transitionDuration={100} autoFocus={false} canEscapeKeyClose={false} disabled={false} enforceFocus={false} lazy={true} popoverClassName=\\"bp4-tooltip2\\" portalContainer={[undefined]} boundary=\\"clippingParents\\" captureDismiss={false} defaultIsOpen={false} fill={false} hasBackdrop={false} inheritDarkTheme={true} matchTargetWidth={false} openOnTargetFocus={true} positioningStrategy=\\"absolute\\" renderTarget={[undefined]} shouldReturnFocusOnClose={false} targetTagName=\\"span\\" usePortal={true}>
                <Manager>
                  <Reference>
                    <Blueprint4.ResizeSensor2 targetRef={[Function (anonymous)]} onResize={[Function (anonymous)]}>
                      <span aria-haspopup={[undefined]} className=\\"bp4-popover2-target\\" onBlur={[Function (anonymous)]} onContextMenu={[Function (anonymous)]} onFocus={[Function (anonymous)]} onMouseEnter={[Function (anonymous)]} onMouseLeave={[Function (anonymous)]}>
                        <Blueprint4.Icon icon=\\"help\\" className=\\"\\" disabled={[undefined]} tabIndex={0}>
                          <span aria-hidden={true} icon=\\"help\\" disabled={[undefined]} tabIndex={0} className=\\"bp4-icon bp4-icon-help\\" title={[undefined]}>
                            <svg fill={[undefined]} data-icon=\\"help\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                              <path d=\\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm1 13H7v-2h2v2zm1.93-6.52c-.14.32-.35.64-.62.97L9.25 8.83c-.12.15-.24.29-.28.42-.04.13-.09.3-.09.52V10H7.12V8.88s.05-.51.21-.71L8.4 6.73c.22-.26.35-.49.44-.68.09-.19.12-.38.12-.58 0-.3-.1-.55-.28-.75-.18-.19-.44-.28-.76-.28-.33 0-.59.1-.78.29-.19.19-.33.46-.4.81-.03.11-.1.15-.2.14l-1.7-.25c-.12-.01-.16-.08-.14-.19.12-.82.46-1.47 1.03-1.94.57-.48 1.32-.72 2.25-.72.47 0 .9.07 1.29.22s.72.34 1 .59c.28.25.49.55.65.89.15.35.22.72.22 1.12s-.07.75-.21 1.08z\\" fillRule=\\"evenodd\\" />
                            </svg>
                          </span>
                        </Blueprint4.Icon>
                      </span>
                    </Blueprint4.ResizeSensor2>
                  </Reference>
                  <Popper innerRef={[Function (anonymous)]} placement=\\"left\\" strategy=\\"absolute\\" modifiers={{...}}>
                    <Blueprint4.Overlay autoFocus={false} backdropClassName=\\"bp4-popover2-backdrop\\" backdropProps={{...}} canEscapeKeyClose={false} canOutsideClickClose={false} enforceFocus={false} hasBackdrop={false} isOpen={false} onClose={[Function (anonymous)]} onClosed={[undefined]} onClosing={[undefined]} onOpened={[undefined]} onOpening={[undefined]} transitionDuration={100} transitionName=\\"bp4-popover2\\" usePortal={true} portalClassName={[undefined]} portalContainer={[undefined]} shouldReturnFocusOnClose={false} lazy={true} />
                  </Popper>
                </Manager>
              </Blueprint4.Popover2>
            </Tooltip2Provider>
          </Blueprint4.Tooltip2>
        </span>
        <Blueprint4.Icon icon={[undefined]} />
      </button>
    </Blueprint4.Button>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"testcaseCards\\">
            <div className=\\"testcases-header\\">
              <div className=\\"header-fn\\">
                Testcase
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-expected\\">
                Expected result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
              <div className=\\"header-actual\\">
                Actual result
                <Blueprint4.Icon icon=\\"caret-down\\">
                  <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                    <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                      <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                    </svg>
                  </span>
                </Blueprint4.Icon>
              </div>
            </div>
            <SideContentTestcaseCard index={0} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard correct secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        &quot;lorem&quot;;
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        &quot;lorem&quot;
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        &quot;lorem&quot;
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={1} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        is_prime(2);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        true
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        No Answer
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={2} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard correct secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        is_prime(3);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        true
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        true
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={3} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard wrong secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        is_prime(4);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        false
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        true
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
            <SideContentTestcaseCard index={4} testcase={{...}} handleTestcaseEval={[Function: handleTestcaseEval]} workspaceLocation=\\"grading\\">
              <div className=\\"AutograderCard wrong secret\\">
                <Blueprint4.Card className=\\"bp4-interactive\\" elevation={1} onClick={[Function (anonymous)]} interactive={false}>
                  <div className=\\"bp4-card bp4-elevation-1 bp4-interactive\\" onClick={[Function (anonymous)]}>
                    <Component className=\\"testcase-program\\">
                      <pre className=\\"bp4-code-block testcase-program\\">
                        is_prime(5);
                      </pre>
                    </Component>
                    <Component className=\\"testcase-expected\\">
                      <pre className=\\"bp4-code-block testcase-expected\\">
                        true
                      </pre>
                    </Component>
                    <Component className=\\"testcase-actual\\">
                      <pre className=\\"bp4-code-block testcase-actual\\">
                        Line 3: Name a not declared.
                      </pre>
                    </Component>
                  </div>
                </Blueprint4.Card>
              </div>
            </SideContentTestcaseCard>
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
    <ControlButton label=\\"Autograder Results\\" icon=\\"caret-down\\" onClick={[Function (anonymous)]} options={{...}}>
      <Blueprint4.AnchorButton disabled={false} fill={false} intent=\\"none\\" minimal={true} className=\\"collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} icon={{...}} rightIcon={false}>
        <a role=\\"button\\" disabled={false} className=\\"bp4-button bp4-minimal collapse-button\\" type={[undefined]} onClick={[Function (anonymous)]} onBlur={[Function (anonymous)]} onFocus={[undefined]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={0} href={[undefined]}>
          <Blueprint4.Icon icon={{...}}>
            <Blueprint4.Icon icon=\\"caret-down\\" color={[undefined]}>
              <span aria-hidden={true} icon=\\"caret-down\\" className=\\"bp4-icon bp4-icon-caret-down\\" title={[undefined]}>
                <svg fill={[undefined]} data-icon=\\"caret-down\\" width={16} height={16} viewBox=\\"0 0 16 16\\" aria-labelledby={[undefined]} role=\\"img\\">
                  <path d=\\"M12 6.5c0-.28-.22-.5-.5-.5h-7a.495.495 0 00-.37.83l3.5 4c.09.1.22.17.37.17s.28-.07.37-.17l3.5-4c.08-.09.13-.2.13-.33z\\" fillRule=\\"evenodd\\" />
                </svg>
              </span>
            </Blueprint4.Icon>
          </Blueprint4.Icon>
          <span className=\\"bp4-button-text\\">
            Autograder Results
          </span>
          <Blueprint4.Icon icon={false} />
        </a>
      </Blueprint4.AnchorButton>
    </ControlButton>
    <Blueprint4.Collapse isOpen={true} keepChildrenMounted={true} component=\\"div\\" transitionDuration={200}>
      <div className=\\"bp4-collapse\\" style={{...}}>
        <div className=\\"bp4-collapse-body\\" style={{...}} aria-hidden={false}>
          <div className=\\"noResults\\">
            There are no results to show.
          </div>
        </div>
      </div>
    </Blueprint4.Collapse>
  </div>
</SideContentAutograder>"
`;
