$sicp-text-color: #333333;
$sicp-background-color: #ffffff;

$sicp-max-width: 1050px;
$sicp-code-snippet-width: 90vw;
$sicp-code-snippet-max-width: 1500px;
$sicp-content-lr-padding: 6em;

// Override Sass min()
@function min($numbers...) {
  @return m#{i}n(#{$numbers});
}

.Sicp {
  width: 100%;
  color: $sicp-text-color;
  overflow: auto;
  background-color: $sicp-background-color;
  font-size: 16pt;
  line-height: 2;

  .bp4-non-ideal-state {
    font-size: 13pt;
  }

  pre {
    overflow-x: scroll;
  }

  .bp4-blockquote {
    margin: 10px 0;
  }

  .bp4-heading {
    margin-top: 10px;
  }

  .bp4-code {
    color: $sicp-text-color;
    background-color: inherit;
    box-shadow: none;
  }

  .bp4-code-block {
    font-size: 14pt;
    padding: 0;
    margin: 10px 0;
    box-shadow: none;
    color: $sicp-text-color;
    background-color: inherit;
  }

  .katex {
    font-size: 15pt;
  }

  .sicp-text {
    margin-bottom: 32px;
  }

  .sicp-content {
    margin: 1em auto;
    padding: 0 $sicp-content-lr-padding;
    max-width: $sicp-max-width;
    height: fit-content;
    background-color: $sicp-background-color;

    .sicp-anchor-link-container:hover > .sicp-anchor-link {
      color: #cccccc;
    }

    .sicp-anchor-link {
      position: relative;
      display: block;
      overflow: visible;
      width: 16px;
      height: 0px;
      left: -22px;
      color: transparent;
    }

    .sicp-anchor-link:hover {
      color: $sicp-text-color;
    }

    .sicp-anchor-link:hover + div {
      background-color: #dddddd;
      border-radius: 5px;
    }

    .sicp-navigation-buttons {
      margin: 25px 0;
      display: flex;
      flex-flow: row nowrap;
      justify-content: space-between;

      .bp4-button {
        background-color: $cadet-color-3;
        width: 80px;
        padding: 10px 15px;
      }

      .bp4-button:hover {
        background-color: $cadet-color-1;
      }
    }

    p {
      display: inline;
    }

    @media only screen and (max-width: 768px) {
      padding: 0 1.4em;
    }
  }

  .bp4-heading {
    color: $sicp-text-color;
  }

  .sicp-index-page {
    max-width: 1400px;
    margin: 1em auto;
    padding: 0 1em;

    h1,
    h2 {
      text-align: right;
    }

    h4 {
      margin-top: 15px;
    }

    > h2,
    > .sicp-licenses {
      text-align: center;
    }

    > .sicp-cover {
      display: flex;
      justify-content: space-evenly;

      > .sicp-cover-text {
        display: flex;
        justify-content: space-between;
        flex-flow: column nowrap;
        text-align: right;
        align-items: flex-end;
        font-size: smaller;

        > .sicp-authors {
          max-width: 500px;

          > h4 {
            margin-bottom: 0;
          }

          > h5 {
            font-weight: 300;
          }
        }
      }

      @media only screen and (max-width: 768px) {
        flex-direction: column;
      }
    }

    @media only screen and (max-width: 768px) {
      h1,
      h2,
      h4,
      h5 {
        text-align: left;
      }

      > .sicp-cover {
        .sicp-cover-text {
          align-items: flex-start;
          text-align: left;
        }
      }

      > h2 {
        text-align: center;
      }
    }
  }

  .sicp-code-snippet {
    margin: 10px 0;
    line-height: 1;
    width: 100%;

    .sicp-code-snippet-open {
      width: 100vw;
      margin: 25px 0;
      transform: translateX(
        min(
          -$sicp-content-lr-padding,
          calc(#{$sicp-max-width} / 2 - 50vw - #{$sicp-content-lr-padding})
        )
      );
      display: flex;
      flex-flow: column nowrap;
      align-items: center;

      > .ControlBar {
        display: flex;
        background-color: $cadet-color-1;
        color: white;
        padding: 5px;
        width: $sicp-code-snippet-width;
        max-width: $sicp-code-snippet-max-width;

        .ControlBar_flow {
          flex-grow: 1;
        }

        @media only screen and (max-width: 768px) {
          width: 100%;
          max-width: unset;
        }
      }

      .sicp-code-snippet-desktop-open {
        width: $sicp-code-snippet-width;
        max-width: $sicp-code-snippet-max-width;
      }

      .sicp-workspace-container-container {
        display: flex;
        flex-flow: column nowrap;
        height: 100%;

        // editor workspace
        .workspace {
          color: white;
          overflow-y: auto;
        }
      }

      @media only screen and (max-width: 768px) {
        display: block;
        position: fixed;
        margin: 0;
        transform: none;
        z-index: 20;
        top: 0;
        left: 0;
        height: calc(100% - 40px); // minus size of control bar
        width: 100vw;
      }
    }

    .sicp-code-snippet-closed {
      padding: 0;
      margin: 0;
    }
  }

  .sicp-footnote {
    font-size: 13pt;
    margin-bottom: 16px;
  }

  .sicp-figure {
    margin: 45px auto 25px auto;
    display: flex;
    flex-flow: column nowrap;
    align-items: center;

    > .sicp-caption {
      margin: 15px auto;
      text-align: center;
    }
  }

  .sicp-attribution {
    text-align: right;
  }

  .sicp-exercise {
    margin: 10px 0;
    padding: 10px;
    background-color: $sicp-background-color !important;

    .sicp-button-container {
      width: 100%;
      display: flex;
      flex-direction: column;
      align-items: flex-end;

      > .bp4-button {
        margin: 5px;
      }
    }
  }

  .sicp-reference {
    margin-bottom: 1.5rem;
  }
}

// Styles for sicp table of contents
.sicp-toc {
  overflow-y: auto;
  text-align: left;

  .bp4-tree-node-content {
    height: fit-content;
  }

  .bp4-tree-node-list {
    padding: 0;
  }

  .bp4-tree-node-label {
    padding-left: 7px;
    white-space: normal;
    text-overflow: clip;
  }

  .bp4-tree-node-caret {
    color: #777777 !important;
    scale: 1.25;
  }

  .bp4-tree-node-caret:hover {
    color: $sicp-text-color !important;
  }
}

.sicp-toc-drawer {
  width: 500px !important;

  .sicp-toc-tree {
    color: $sicp-text-color;
    font-size: larger;

    .bp4-tree-node-content {
      padding-top: 10px;
      padding-bottom: 10px;
    }

    @media only screen and (max-width: 768px) {
      font-size: small;
    }
  }

  @media only screen and (max-width: 768px) {
    width: 70% !important;
  }
}
